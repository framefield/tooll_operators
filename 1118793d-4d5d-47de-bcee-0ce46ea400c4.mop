{
  "Name": "RenderToImgHDR (obsolete)",
  "_id": "1118793d-4d5d-47de-bcee-0ce46ea400c4",
  "Namespace": "lib.image.render",
  "Description": "Note:\r\n- SampleCount is not supported right now. Use SMAA post filtering\r\n- SampleQuality is not supported \r\n- A size of 0 will use in the incoming size for rendering.",
  "Inputs": [
    {
      "Name": "Scene",
      "MetaInstanceID": "ac14f6fe-4300-4d7e-846c-0ab28c08de66",
      "DefaultValue": {
        "Type": "Scene",
        "Value": "Framefield.Core.Scene"
      },
      "MetaID": "79122951-7bc4-4c68-b085-866eab828248",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Size.X",
      "MetaInstanceID": "a1f1ece0-be6b-4e21-9615-302df56d84ad",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "100000",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Size.Y",
      "MetaInstanceID": "cc8a685d-d82d-40ae-88cd-d7e57c96d271",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "100000",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.R",
      "MetaInstanceID": "c715ea5f-11a7-49eb-9b05-3f4acfa0eb8a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.G",
      "MetaInstanceID": "0abddc14-1883-4076-8b3a-543f750743bc",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.B",
      "MetaInstanceID": "7f1609be-6a1a-4762-bc6b-71885960437a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.A",
      "MetaInstanceID": "52bd36e6-c017-4dc8-9081-baff5cbd79cd",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SampleCount",
      "MetaInstanceID": "bcf5f662-1cd7-4a0d-b38b-4719d0e90df5",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "1",
      "Max": "16",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SampleQuality",
      "MetaInstanceID": "a27838c7-1238-4694-ab38-cfb6fffbd51e",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "16",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ClearBackground",
      "MetaInstanceID": "e9016076-f6b5-4f0d-9836-6a55325b8d2d",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": [
        {
          "Name": "Leave",
          "Value": "0"
        },
        {
          "Name": "Clear",
          "Value": "1"
        }
      ]
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "3770149c-ea5d-4f22-8b9b-4c46f1924479",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "7946a17f-7ed4-44de-8132-6b37d4955c70",
      "MetaID": "09c477b3-e771-417c-8e87-e819f893600b",
      "Name": "RenderToImgHDR (obsolete)Func",
      "Version": "1f1542af-b8d5-488c-91bb-4e5b128faa23",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.DXGI;",
        "",
        "namespace Framefield.Core.ID09c477b3_e771_417c_8e87_e819f893600b",
        "{",
        "    public class Class_RenderToImgHDR : OperatorPart.Function",
        "    {",
        "    // >>> _inputids",
        "    private enum InputId",
        "    {",
        "        Scene = 0,",
        "        SizeX = 1,",
        "        SizeY = 2,",
        "        ColorR = 3,",
        "        ColorG = 4,",
        "        ColorB = 5,",
        "        ColorA = 6,",
        "        SampleCount = 7,",
        "        SampleQuality = 8,",
        "        ClearBackground = 9",
        "    }",
        "    // <<< _inputids",
        "        public override void Dispose() {",
        "            ResourceManager.Dispose(_renderTargetResource);",
        "            Utilities.DisposeObj(ref _renderTargetView);",
        "            ResourceManager.Dispose(_renderDepthResource);",
        "            Utilities.DisposeObj(ref _renderTargetDepthView);",
        "        }",
        "",
        "        private Texture2D _renderTarget;",
        "        private bool BuildRenderTarget(int width, int height, SharpDX.Direct3D11.Device device) {",
        "            Utilities.DisposeObj(ref _renderTarget);",
        "            var uavVisuDesc = new Texture2DDescription",
        "            {",
        "                BindFlags = BindFlags.ShaderResource | BindFlags.RenderTarget,",
        "                Format = Format.R16G16B16A16_Float,",
        "                Width = width,",
        "                Height = height,",
        "                MipLevels = 1, //origImage.Description.MipLevels,",
        "                SampleDescription = new SampleDescription(1, 0),",
        "                Usage = ResourceUsage.Default,",
        "                OptionFlags = ResourceOptionFlags.None,",
        "                CpuAccessFlags = CpuAccessFlags.None,",
        "                ArraySize = 1",
        "            };",
        "            _renderTarget = new Texture2D(D3DDevice.Device, uavVisuDesc);",
        "            ",
        "            //var renderTargetResourceChanged = ResourceManager.ValidateRenderTargetResource(ref _renderTargetResource, OperatorPart, device, width, height);",
        "            //if (renderTargetResourceChanged) {",
        "                Utilities.DisposeObj(ref _renderTargetView);",
        "                _renderTargetView = new RenderTargetView(device, _renderTarget);",
        "            //}",
        "",
        "            var depthStencilResourceChanged = ResourceManager.ValidateDepthStencilResource(ref _renderDepthResource, OperatorPart, device, width, height);",
        "            if (depthStencilResourceChanged) {",
        "                Utilities.DisposeObj(ref _renderTargetDepthView);",
        "",
        "                var depthViewDesc = new DepthStencilViewDescription();",
        "                depthViewDesc.Format = Format.D32_Float;",
        "                depthViewDesc.Dimension = DepthStencilViewDimension.Texture2D;",
        "",
        "                _renderTargetDepthView = new DepthStencilView(device, _renderDepthResource.Texture, depthViewDesc);",
        "            }",
        "",
        "            return true;//renderTargetResourceChanged || depthStencilResourceChanged;",
        "        }",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            var Scene = inputs[0];",
        "",
        "            //var rebuildTarget = inputs[1].Func.Changed ||",
        "            //                    inputs[2].Func.Changed ||",
        "            //                    inputs[3].Func.Changed ||",
        "            //                    inputs[4].Func.Changed ||",
        "            //                    inputs[5].Func.Changed ||",
        "            //                    inputs[6].Func.Changed ||",
        "            //                    inputs[7].Func.Changed ||",
        "            //                    //inputs[8].Func.Changed ||",
        "            //                    _renderTargetResource == null;",
        "",
        "            int SizeX = (int) inputs[1].Eval(context).Value;",
        "            int SizeY = (int) inputs[2].Eval(context).Value;",
        "            float ColorR = inputs[3].Eval(context).Value;",
        "            float ColorG = inputs[4].Eval(context).Value;",
        "            float ColorB = inputs[5].Eval(context).Value;",
        "            float ColorA = inputs[6].Eval(context).Value;",
        "            bool ClearBackground = inputs[(int)InputId.ClearBackground].Eval(context).Value > 0.5f;",
        "            int SampleCount = (int) inputs[7].Eval(context).Value;",
        "            int SampleQuality = (int) inputs[8].Eval(context).Value;",
        "",
        "            if (SampleCount != 1) {",
        "                float sc = 0;",
        "                if (context.Variables.TryGetValue(\"Samples\", out sc))",
        "                    SampleCount = (int)sc;",
        "            }",
        "",
        "            if (SizeX == 0 || SizeY == 0) {",
        "                SizeX = (int) context.Viewport.Width;// * (SampleCount > 1 ? 2 : 1);",
        "                SizeY = (int) context.Viewport.Height;// * (SampleCount > 1 ? 2 : 1);",
        "                //if ((_renderTargetResource != null) && ",
        "                //    (SizeX != _renderTargetResource.Texture.Description.Width || SizeY != _renderTargetResource.Texture.Description.Height)) {",
        "                //    rebuildTarget = true;",
        "                //}",
        "            }",
        "",
        "            if (BuildRenderTarget(SizeX, SizeY, context.D3DDevice))",
        "                Changed = true;",
        "",
        "            if (Changed) {",
        "                var subContext = new OperatorPartContext(context);",
        "                var D3DDevice = context.D3DDevice;",
        "",
        "                float aspect = (float) SizeX / (float) SizeY;",
        "                subContext.CameraProjection = Matrix.PerspectiveFovLH(3.1415f / 4.0f, aspect, 0.01f, 1000);",
        "                subContext.WorldToCamera = Matrix.LookAtLH(new Vector3(0, 0, -2.415f), new Vector3(0, 0, 0), new Vector3(0, 1, 0));",
        "                subContext.ObjectTWorld = Matrix.Identity;",
        "                subContext.TextureMatrix = Matrix.Identity;",
        "                subContext.Renderer = OperatorPartContext.DefaultRenderer;",
        "                subContext.RenderTargetView = _renderTargetView;",
        "                subContext.DepthStencilView = _renderTargetDepthView;",
        "                subContext.Objects[OperatorPartContext.MATERIAL_ID] = new DefaultMaterial();",
        "",
        "                subContext.DepthStencilState = OperatorPartContext.DefaultRenderer.DefaultDepthStencilState;",
        "                subContext.RasterizerState = OperatorPartContext.DefaultRenderer.DefaultRasterizerState;",
        "                subContext.BlendState = OperatorPartContext.DefaultRenderer.DefaultBlendState;",
        "                subContext.BlendFactor = OperatorPartContext.DefaultRenderer.DefaultBlendFactor;",
        "                subContext.Viewport = new Viewport(0, 0, SizeX, SizeY, 0.0f, 1.0f);",
        "",
        "                subContext.InputLayout = OperatorPartContext.DefaultRenderer.SceneDefaultInputLayout;",
        "                subContext.Effect = OperatorPartContext.DefaultRenderer.SceneDefaultEffect;",
        "",
        "                D3DDevice.ImmediateContext.ClearDepthStencilView(_renderTargetDepthView, DepthStencilClearFlags.Depth | DepthStencilClearFlags.Stencil, 1.0f, 0);",
        "                if (ClearBackground) {",
        "                    D3DDevice.ImmediateContext.ClearRenderTargetView(_renderTargetView, new SharpDX.Color4(ColorR, ColorG, ColorB, ColorA));",
        "                }",
        "",
        "                Scene.Eval(subContext);",
        "",
        "                Changed = false;",
        "            }",
        "",
        "            context.Image = _renderTarget;",
        "            context.DepthImage = _renderDepthResource.Texture;",
        "",
        "            return context;",
        "        }",
        "",
        "        Resource _renderTargetResource;",
        "        RenderTargetView _renderTargetView;",
        "        Resource _renderDepthResource;",
        "        DepthStencilView _renderTargetDepthView;",
        "    }",
        "}",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "7946a17f-7ed4-44de-8132-6b37d4955c70",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "3770149c-ea5d-4f22-8b9b-4c46f1924479"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ac14f6fe-4300-4d7e-846c-0ab28c08de66",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7946a17f-7ed4-44de-8132-6b37d4955c70"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "a1f1ece0-be6b-4e21-9615-302df56d84ad",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7946a17f-7ed4-44de-8132-6b37d4955c70"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "cc8a685d-d82d-40ae-88cd-d7e57c96d271",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7946a17f-7ed4-44de-8132-6b37d4955c70"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c715ea5f-11a7-49eb-9b05-3f4acfa0eb8a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7946a17f-7ed4-44de-8132-6b37d4955c70"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0abddc14-1883-4076-8b3a-543f750743bc",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7946a17f-7ed4-44de-8132-6b37d4955c70"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "7f1609be-6a1a-4762-bc6b-71885960437a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7946a17f-7ed4-44de-8132-6b37d4955c70"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "52bd36e6-c017-4dc8-9081-baff5cbd79cd",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7946a17f-7ed4-44de-8132-6b37d4955c70"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "bcf5f662-1cd7-4a0d-b38b-4719d0e90df5",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7946a17f-7ed4-44de-8132-6b37d4955c70"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "a27838c7-1238-4694-ab38-cfb6fffbd51e",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7946a17f-7ed4-44de-8132-6b37d4955c70"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e9016076-f6b5-4f0d-9836-6a55325b8d2d",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7946a17f-7ed4-44de-8132-6b37d4955c70"
    }
  ]
}