{
  "Name": "GlassShader",
  "_id": "78afcbc8-bc46-444a-bbf0-a0125187915c",
  "Namespace": "lib.geometry.material",
  "Description": "",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "ef277ac5-2117-4de7-a806-8d653b143064",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "float4x4 objectToWorldMatrix;\r",
          "float4x4 worldToCameraMatrix;\r",
          "float4x4 cameraToObjectMatrix; // modelview inverse\r",
          "float4x4 projMatrix;\r",
          "float4x4 textureMatrix;\r",
          "\r",
          "\r",
          "//>>> _parameters\r",
          "float2 Range;",
          "float Falloff;",
          "float4 NearColor;",
          "float4 FarColor;",
          "float2 Line;",
          "float4 LineColor;",
          "float4 BackColor;",
          "float Refraction;",
          "Texture2D Background;",
          "Texture2D TextureSurface;",
          "//<<< _parameters\r",
          "\r",
          "float2 RenderTargetSize;\r",
          "\r",
          "\r",
          "Texture2D txDiffuse;\r",
          "\r",
          "\r",
          "struct PointLight\r",
          "{\r",
          "    float4 position;\r",
          "    float4 ambient;\r",
          "    float4 diffuse;\r",
          "    float4 specular;\r",
          "    float4 attenuation;\r",
          "};\r",
          "\r",
          "struct SpotLight\r",
          "{\r",
          "    float4 ambient;\r",
          "    float4 diffuse;\r",
          "    float4 specular;\r",
          "    float constantAttenuation;\r",
          "    float linearAttenuation;\r",
          "    float quadraticAttenuation;\r",
          "    float spotCutoff;\r",
          "    float spotCosCutoff;\r",
          "    float spotExponent;\r",
          "};\r",
          "\r",
          "cbuffer FogSettings\r",
          "{\r",
          "    float4 fogColor;\r",
          "    float fogStart;\r",
          "    float fogEnd;\r",
          "    float fogScale;\r",
          "}\r",
          "\r",
          "cbuffer MaterialBuffer\r",
          "{\r",
          "    float4 materialAmbient;\r",
          "    float4 materialDiffuse;\r",
          "    float4 materialSpecular;\r",
          "    float4 materialEmission;\r",
          "    float materialShininess;\r",
          "};\r",
          "\r",
          "\r",
          "cbuffer PointLightsBuffer\r",
          "{\r",
          "    int numPointLights;\r",
          "    PointLight pointLights[3];\r",
          "};\r",
          "\r",
          "\r",
          "\r",
          "\r",
          "SamplerState samLinear\r",
          "{\r",
          "    Filter = MIN_MAG_MIP_LINEAR;\r",
          "    AddressU = Wrap;\r",
          "    AddressV = Wrap;\r",
          "};\r",
          "\r",
          "\r",
          "struct VS_IN\r",
          "{\r",
          "    float4 pos : POSITION;\r",
          "    float3 normal : NORMAL;\r",
          "    float4 col : COLOR;\r",
          "    float2 texCoord : TEXCOORD0;\r",
          "    float3 tangent : TANGENT0;\r",
          "    float3 binormal : BINORMAL0;\r",
          "};\r",
          "\r",
          "\r",
          "struct PS_IN\r",
          "{\r",
          "    float3 WorldNormal: TEXCOORD1;\r",
          "    float4 pos : SV_POSITION;\r",
          "    float4 posInWorld  : WORLD_POS;\r",
          "    float3 normal : NORMAL;   \r",
          "    float2 texCoord : TEXCOORD0;\r",
          "    float4 vertexColor : COLOR;\r",
          "    float3 fragPosToCamPos : POS;\r",
          "    float fogFragCoord : FALLO;\r",
          "};\r",
          "\r",
          "\r",
          "float mod(float a, float b)\r",
          "{\r",
          "    return a - b*floor(a/b);\r",
          "}\r",
          "\r",
          "float3 mod(float3 a, float b)\r",
          "{\r",
          "    return a - b*floor(a/b);\r",
          "}\r",
          "\r",
          "\r",
          "\r",
          "//>>> VS\r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    float4 WorldPos = mul(input.pos, objectToWorldMatrix);",
          "    float4 WorldNormal = mul(input.normal, objectToWorldMatrix);",
          "",
          "    output.posInWorld = mul(input.pos, objectToWorldMatrix);",
          "    output.pos = mul(output.posInWorld, worldToCameraMatrix);",
          "    output.normal = mul(input.normal, (float3x3)objectToWorldMatrix);",
          "    output.fogFragCoord = abs(output.pos.z / input.pos.w);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = mul(float4(input.texCoord, 0, 1), textureMatrix).xy;",
          "    output.fragPosToCamPos = normalize(mul(cameraToObjectMatrix[3], objectToWorldMatrix) - output.posInWorld);",
          "    output.vertexColor = input.col;",
          "      ",
          "    return output;",
          "}",
          "//<<< VS\r",
          "\r",
          "float4 calcLightSource(float3 fragPosInWorld, int lightIdx, float3 cameraVector, float3 norm, float4 baseColor)\r",
          "{\r",
          "    float3 lightVector = pointLights[lightIdx].position - fragPosInWorld;\r",
          "    float dist = length(lightVector);\r",
          "    lightVector = normalize(lightVector);\r",
          "    float nxDir = max(0.0, dot(norm, lightVector));\r",
          "    float4 diffuse = pointLights[lightIdx].diffuse * nxDir;\r",
          "    float specularPower = 0.0;\r",
          "    if (nxDir > 0.0)\r",
          "    {\r",
          "        float3 r = reflect(-lightVector, norm);\r",
          "        float rl = max(0.0, dot(r, cameraVector));\r",
          "        specularPower = pow(rl, materialShininess);\r",
          "    }\r",
          "\r",
          "    float attenuation = 1.0 / (pointLights[lightIdx].attenuation.x +\r",
          "                               pointLights[lightIdx].attenuation.y * dist +\r",
          "                               pointLights[lightIdx].attenuation.z * dist * dist);\r",
          "    float4 color = materialAmbient * pointLights[lightIdx].ambient * attenuation +\r",
          "                   materialDiffuse * (diffuse * baseColor * attenuation) +\r",
          "                   materialSpecular * pointLights[lightIdx].specular * specularPower * attenuation;\r",
          "                   \r",
          "    return color;\r",
          "}\r",
          "\r",
          "\r",
          "\r",
          "//>>> PS\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float2 newTexCoords = input.texCoord;\r",
          "    float3 norm = normalize(input.normal);\r",
          "    float4 baseColor = NearColor; \r",
          "    float4 paintColor = TextureSurface.Sample(samLinear, newTexCoords);\r",
          "\r",
          "    float4 color = float4(0, 0, 0, 1);\r",
          "    float4 light = float4(0, 0, 0, 1);\r",
          "    for (int lightIdx = 0; lightIdx < numPointLights; ++lightIdx)\r",
          "    {\r",
          "        light += calcLightSource(input.posInWorld, lightIdx, input.fragPosToCamPos, norm, baseColor);\r",
          "    }\r",
          "\r",
          "    float fog = (fogEnd - input.fogFragCoord) * fogScale;\r",
          "    fog = clamp(fog, 0.0, 1.0);\r",
          "    \r",
          "    color += materialEmission*baseColor;\r",
          "    \r",
          "    float normalAngle = pow( dot( normalize(input.fragPosToCamPos), normalize(input.normal)) + Line.x , Falloff) + Line.y;\r",
          "    \r",
          "    \r",
          "    //float2 p=input.texCoord;\r",
          "    float2 bgPos = float2(input.pos.x / RenderTargetSize.x, input.pos.y / RenderTargetSize.y);\r",
          "    float2 displacedBgPos = bgPos + normalAngle* input.normal.xy * Refraction;\r",
          "    \r",
          "    float4 glassColor=Background.Sample(samLinear, float2(displacedBgPos.x , displacedBgPos.y )); \r",
          "    \r",
          "    glassColor = lerp( glassColor, BackColor, (1-normalAngle) * BackColor.a);\r",
          "               \r",
          "    float depthN = 1 / (Range.y / 1000) ;\r",
          "    depthN = 1-pow(1-depthN, pow(2, 1.678));\r",
          "    \r",
          "    float blendGlass= min(paintColor.r, 1);\r",
          "    //blendGlass = 1;\r",
          "    \r",
          "    //float4 outColor = (lerp( glassColor, baseColor+color + paintColor * FarColor, blendGlass) + light);\r",
          "    //float4 revealColor = baseColor + color + paintColor * FarColor;\r",
          "    float4 revealColor = baseColor + color + paintColor * FarColor;\r",
          "    \r",
          "    float4 outColor = (lerp( glassColor, revealColor , blendGlass) + light);\r",
          "    //float4 outColor = paintColor;\r",
          "    //float4 refl= texCUBE(samLinear, float3(norm));\r",
          "    //float4 refl=  texCUBE(samLinear, norm);\r",
          "    //return cbg;\r",
          "    //color = lerp(cbg,  color, normalAngle*1);\r",
          "    //color= cbg;\r",
          "    //color.r= 1-normalAngle;\r",
          "    //color = cbg;\r",
          "    //color.r=fog;\r",
          "    \r",
          "    \r",
          "    //color *= lerp( NearColor, FarColor, depthN);\r",
          "    //color = lerp( color, LineColor, line_onoff * LineColor.a * (1-depthN));\r",
          "    //outColor.a= lerp( NearColor.a,FarColor.a, backColor.a) ;\r",
          "    outColor.a = lerp (LineColor.a , BackColor.a, normalAngle * Refraction);\r",
          "    //outColor= float4(1,1,1,1);\r",
          "    \r",
          "   \r",
          "    return outColor;\r",
          "    \r",
          "\r",
          "}\r",
          "//<<< PS\r",
          "\r",
          "technique10 Render\r",
          "{\r",
          "    pass P0\r",
          "    {\r",
          "        SetGeometryShader( 0 );\r",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );\r",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );\r",
          "    }\r",
          "} "
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Scene",
      "MetaInstanceID": "d9c34112-cd8d-44eb-ac78-91f521ed8ac3",
      "DefaultValue": {
        "Type": "Scene",
        "Value": "Framefield.Core.Scene"
      },
      "MetaID": "79122951-7bc4-4c68-b085-866eab828248",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Range.X",
      "MetaInstanceID": "b5653a35-12b1-4a97-8c2b-2892571e6038",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Range.Y",
      "MetaInstanceID": "27c5b8be-baeb-4af2-a34a-9e237088b326",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Falloff",
      "MetaInstanceID": "2281b5a9-08a3-45e9-a2c7-9e10e68748a8",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "NearColor.R",
      "MetaInstanceID": "e1371714-930b-4d6b-a52a-863ae8847e13",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "NearColor.G",
      "MetaInstanceID": "a0a53a38-28b6-41c5-9457-0b070686ff6c",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "NearColor.B",
      "MetaInstanceID": "cd1cb018-f350-4b1c-b4fa-088eecfbd7d4",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "NearColor.A",
      "MetaInstanceID": "84c9fbb6-5566-49a0-8e0f-65a24578821a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "FarColor.R",
      "MetaInstanceID": "4146dfbf-97c1-4446-bee5-5ef363d86461",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "FarColor.G",
      "MetaInstanceID": "2213bd14-3dcf-4c6e-a7ea-a293b69a0ca3",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "FarColor.B",
      "MetaInstanceID": "92c07c1b-7186-4f44-b019-345eea03a753",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "FarColor.A",
      "MetaInstanceID": "e1b043e0-3fb6-465c-971f-0048fe0ed104",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Line.Distance",
      "MetaInstanceID": "800d2448-bb7e-46b9-bfb0-2f944f8ba9b3",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Line.Width",
      "MetaInstanceID": "81211962-c73f-446d-aef6-1ae6098ff38d",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-1",
      "Max": "100",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "LineColor.R",
      "MetaInstanceID": "73247b15-12ed-42a5-bb57-c56d1ccfdd62",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "LineColor.G",
      "MetaInstanceID": "50b5ed5b-822c-4706-a044-ace74b5d80db",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "LineColor.B",
      "MetaInstanceID": "9cfd8179-7fb3-4d72-92ab-696298fa488c",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "LineColor.A",
      "MetaInstanceID": "fbcf69ea-6706-445b-88d8-e1ec11f53688",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "BackColor.R",
      "MetaInstanceID": "5b414196-eede-453f-a2e4-e42762eaf28f",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "BackColor.G",
      "MetaInstanceID": "034e5641-6ea3-47b9-ab7f-55ac6d3fdc6e",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "BackColor.B",
      "MetaInstanceID": "2fb12a7a-149d-4ea2-babb-20ab54606fbc",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "BackColor.A",
      "MetaInstanceID": "71eb59a9-d065-4c2a-8389-7f89418a1029",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Refraction",
      "MetaInstanceID": "8bbfbd34-cd83-4fc4-bc7f-075e6ed2e5a9",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100",
      "Max": "100",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Background",
      "MetaInstanceID": "be3fbac5-9339-498b-a8b5-777e95085f68",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Relevant",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "TextureSurface",
      "MetaInstanceID": "3bdc628b-1e7e-4b3c-8612-f79c4b5f3d58",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Relevant",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Scene",
      "MetaInstanceID": "1049afa7-b49d-4b16-bea4-a060715c62a8",
      "MetaID": "79122951-7bc4-4c68-b085-866eab828248"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77",
      "MetaID": "862ed61c-5288-4ac3-b202-e40a17f2dc6b",
      "Name": "GlassShaderFunc",
      "Version": "2d9b21f3-117f-4906-91fc-6fc39a2d81ab",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "using Framefield.Core.Rendering;",
        "",
        "",
        "namespace Framefield.Core.ID862ed61c_5288_4ac3_b202_e40a17f2dc6b",
        "{",
        "",
        "    public class Class_GlassShader : FXSourceCodeFunction",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Scene = 1,",
        "            RangeX = 2,",
        "            RangeY = 3,",
        "            Falloff = 4,",
        "            NearColorR = 5,",
        "            NearColorG = 6,",
        "            NearColorB = 7,",
        "            NearColorA = 8,",
        "            FarColorR = 9,",
        "            FarColorG = 10,",
        "            FarColorB = 11,",
        "            FarColorA = 12,",
        "            LineDistance = 13,",
        "            LineWidth = 14,",
        "            LineColorR = 15,",
        "            LineColorG = 16,",
        "            LineColorB = 17,",
        "            LineColorA = 18,",
        "            BackColorR = 19,",
        "            BackColorG = 20,",
        "            BackColorB = 21,",
        "            BackColorA = 22,",
        "            Refraction = 23,",
        "            Background = 24,",
        "            TextureSurface = 25",
        "        }",
        "        //<<< _inputids",
        "        #region Renderer",
        "        public class Renderer : BaseRenderer",
        "        {",
        "            public override void SetupEffect(OperatorPartContext context) {",
        "                base.SetupEffect(context);",
        "",
        "                try {",
        "                    SetupMaterialConstBuffer(context);",
        "                    SetupFogSettingsConstBuffer(context);",
        "                    SetupPointLightsConstBuffer(context);",
        "                }",
        "                catch (Exception e) {",
        "                    Logger.Error(ParentFunc, \"Error building constant buffer: {0} - Source: {1}\", e.Message, e.Source);",
        "                }",
        "            }",
        "            public OperatorPart.Function ParentFunc {get;set;}            ",
        "        }",
        "        #endregion",
        "",
        "        public Class_GlassShader() {",
        "            _renderer = new Renderer(){ParentFunc = this};",
        "        }",
        "",
        "        public override void Dispose() {",
        "            Utilities.DisposeObj(ref _renderer);",
        "            base.Dispose();",
        "        }",
        "",
        "        bool _firstEval = true;",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            // >>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Scene = inputs[(int)InputId.Scene];",
        "            var RangeX = inputs[(int)InputId.RangeX].Eval(context).Value;",
        "            var RangeY = inputs[(int)InputId.RangeY].Eval(context).Value;",
        "            var Range = new Vector2(RangeX, RangeY);",
        "            var Falloff = inputs[(int)InputId.Falloff].Eval(context).Value;",
        "            var NearColorR = inputs[(int)InputId.NearColorR].Eval(context).Value;",
        "            var NearColorG = inputs[(int)InputId.NearColorG].Eval(context).Value;",
        "            var NearColorB = inputs[(int)InputId.NearColorB].Eval(context).Value;",
        "            var NearColorA = inputs[(int)InputId.NearColorA].Eval(context).Value;",
        "            var NearColor = new Color4(NearColorR, NearColorG, NearColorB, NearColorA);",
        "            var FarColorR = inputs[(int)InputId.FarColorR].Eval(context).Value;",
        "            var FarColorG = inputs[(int)InputId.FarColorG].Eval(context).Value;",
        "            var FarColorB = inputs[(int)InputId.FarColorB].Eval(context).Value;",
        "            var FarColorA = inputs[(int)InputId.FarColorA].Eval(context).Value;",
        "            var FarColor = new Color4(FarColorR, FarColorG, FarColorB, FarColorA);",
        "            var LineDistance = inputs[(int)InputId.LineDistance].Eval(context).Value;",
        "            var LineWidth = inputs[(int)InputId.LineWidth].Eval(context).Value;",
        "            var Line = new Vector2(LineDistance, LineWidth);",
        "            var LineColorR = inputs[(int)InputId.LineColorR].Eval(context).Value;",
        "            var LineColorG = inputs[(int)InputId.LineColorG].Eval(context).Value;",
        "            var LineColorB = inputs[(int)InputId.LineColorB].Eval(context).Value;",
        "            var LineColorA = inputs[(int)InputId.LineColorA].Eval(context).Value;",
        "            var LineColor = new Color4(LineColorR, LineColorG, LineColorB, LineColorA);",
        "            var BackColorR = inputs[(int)InputId.BackColorR].Eval(context).Value;",
        "            var BackColorG = inputs[(int)InputId.BackColorG].Eval(context).Value;",
        "            var BackColorB = inputs[(int)InputId.BackColorB].Eval(context).Value;",
        "            var BackColorA = inputs[(int)InputId.BackColorA].Eval(context).Value;",
        "            var BackColor = new Color4(BackColorR, BackColorG, BackColorB, BackColorA);",
        "            var Refraction = inputs[(int)InputId.Refraction].Eval(context).Value;",
        "            var Background = inputs[(int)InputId.Background].Eval(context).Image; if (Background == null) return context;",
        "            var TextureSurface = inputs[(int)InputId.TextureSurface].Eval(context).Image; if (TextureSurface == null) return context;",
        "            // <<< _params",
        "            if (_firstEval) {",
        "                for (int i = 0; i < NumCodes(); ++i)",
        "                    Compile(i);",
        "                _firstEval = false;",
        "                Changed = true;",
        "            }",
        "",
        "            using (new PropertyStasher<OperatorPartContext>(context, \"Effect\", \"Renderer\")) ",
        "            //>>> _setup_DISABLE",
        "            using (var BackgroundView = new ShaderResourceView(context.D3DDevice, Background))",
        "            using (var TextureSurfaceView = new ShaderResourceView(context.D3DDevice, TextureSurface))",
        "            {",
        "                _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(context.Viewport.Width, context.Viewport.Height));",
        "                _effect.GetVariableByName(\"Range\").AsVector().Set(new Vector2(RangeX, RangeY));",
        "                _effect.GetVariableByName(\"Falloff\").AsScalar().Set(Falloff);",
        "                _effect.GetVariableByName(\"NearColor\").AsVector().Set(new Vector4(NearColorR, NearColorG, NearColorB, NearColorA));",
        "                _effect.GetVariableByName(\"FarColor\").AsVector().Set(new Vector4(FarColorR, FarColorG, FarColorB, FarColorA));",
        "                _effect.GetVariableByName(\"Line\").AsVector().Set(new Vector2(LineDistance, LineWidth));",
        "                _effect.GetVariableByName(\"LineColor\").AsVector().Set(new Vector4(LineColorR, LineColorG, LineColorB, LineColorA));",
        "                _effect.GetVariableByName(\"BackColor\").AsVector().Set(new Vector4(BackColorR, BackColorG, BackColorB, BackColorA));",
        "                _effect.GetVariableByName(\"Refraction\").AsScalar().Set(Refraction);",
        "                _effect.GetVariableByName(\"Background\").AsShaderResource().SetResource(BackgroundView);",
        "                _effect.GetVariableByName(\"TextureSurface\").AsShaderResource().SetResource(TextureSurfaceView);",
        "            //<<< _setup_DISABLE            ",
        "                context.Effect = _effect;",
        "                context.Renderer = _renderer;",
        "                Scene.Eval(context);",
        "",
        "            }                       ",
        "            return context;",
        "        }",
        "",
        "        Renderer _renderer;",
        "    }",
        "}",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "1049afa7-b49d-4b16-bea4-a060715c62a8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ef277ac5-2117-4de7-a806-8d653b143064",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d9c34112-cd8d-44eb-ac78-91f521ed8ac3",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b5653a35-12b1-4a97-8c2b-2892571e6038",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "27c5b8be-baeb-4af2-a34a-9e237088b326",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2281b5a9-08a3-45e9-a2c7-9e10e68748a8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e1371714-930b-4d6b-a52a-863ae8847e13",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "a0a53a38-28b6-41c5-9457-0b070686ff6c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "cd1cb018-f350-4b1c-b4fa-088eecfbd7d4",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "84c9fbb6-5566-49a0-8e0f-65a24578821a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4146dfbf-97c1-4446-bee5-5ef363d86461",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2213bd14-3dcf-4c6e-a7ea-a293b69a0ca3",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "92c07c1b-7186-4f44-b019-345eea03a753",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e1b043e0-3fb6-465c-971f-0048fe0ed104",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "800d2448-bb7e-46b9-bfb0-2f944f8ba9b3",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "81211962-c73f-446d-aef6-1ae6098ff38d",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "73247b15-12ed-42a5-bb57-c56d1ccfdd62",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "50b5ed5b-822c-4706-a044-ace74b5d80db",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9cfd8179-7fb3-4d72-92ab-696298fa488c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "fbcf69ea-6706-445b-88d8-e1ec11f53688",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5b414196-eede-453f-a2e4-e42762eaf28f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "034e5641-6ea3-47b9-ab7f-55ac6d3fdc6e",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2fb12a7a-149d-4ea2-babb-20ab54606fbc",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "71eb59a9-d065-4c2a-8389-7f89418a1029",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8bbfbd34-cd83-4fc4-bc7f-075e6ed2e5a9",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "be3fbac5-9339-498b-a8b5-777e95085f68",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "3bdc628b-1e7e-4b3c-8612-f79c4b5f3d58",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b33aed1-b2c1-4d3f-993b-a426e7f70e77"
    }
  ]
}