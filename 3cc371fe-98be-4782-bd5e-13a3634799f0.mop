{
  "Name": "SmokeNoise",
  "_id": "3cc371fe-98be-4782-bd5e-13a3634799f0",
  "Namespace": "lib.image.generate",
  "Description": "Simple smoke shader\r\n\r\nbased on Cheap, simple, fractal noise based on iq's https://www.shadertoy.com/view/4sfGzS\r\nand \r\nhttps://www.shadertoy.com/view/XtsXRn\r\n",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "11e957d9-abdb-46aa-8768-978fdc0dba8f",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "float Time;",
          "float4 Color;",
          "float SubSpeed;",
          "float SubScale;",
          "float MainScale;",
          "float2 BaseOffset;",
          "float SubStrength;",
          "float SubShift;",
          "float MainSpeed;",
          "float Bias;",
          "//<<< _parameters\r",
          "\r",
          "SamplerState samLinear",
          "{",
          "    Filter = MIN_MAG_MIP_LINEAR;",
          "    AddressU = Wrap;",
          "    AddressV = Wrap;",
          "};",
          "\r",
          "//>>> _declarations\r",
          "struct VS_IN",
          "{",
          "    float4 pos : POSITION;",
          "    float2 texCoord : TEXCOORD;",
          "};",
          "",
          "struct PS_IN",
          "{",
          "    float4 pos : SV_POSITION;",
          "    float2 texCoord: TEXCOORD0;",
          "};",
          "//<<< _declarations\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "\r",
          "//#define time iGlobalTime*0.1\r",
          "float tau=6.2831853;\r",
          "\r",
          "\r",
          "float noise(float3 x) {\r",
          "    float3 p = floor(x);\r",
          "    float3 f = frac(x);\r",
          "    f = f*f*(3.-2.*f);\r",
          "\t\r",
          "    float n = p.x + p.y*157. + 113.*p.z;\r",
          "    \r",
          "    float4 v1 = frac(753.5453123*sin(n + float4(0., 1., 157., 158.)));\r",
          "    float4 v2 = frac(753.5453123*sin(n + float4(113., 114., 270., 271.)));\r",
          "    float4 v3 = lerp(v1, v2, f.z);\r",
          "    float2 v4 = lerp(v3.xy, v3.zw, f.y);\r",
          "    return lerp(v4.x, v4.y, f.x);\r",
          "}\r",
          "\r",
          "float fnoise(float3 p) {\r",
          "  // random rotation reduces artifacts\r",
          "  p =  mul(float3x3(0.28862355854826727, 0.6997227302779844, 0.6535170557707412,\r",
          "           0.06997493955670424, 0.6653237235314099, -0.7432683571499161,\r",
          "           -0.9548821651308448, 0.26025457467376617, 0.14306504491456504), p);\r",
          "  return dot(float4(noise(p), noise(p*2.), noise(p*4.), noise(p*8.)),\r",
          "             float4(0.5, 0.25, 0.125, 0.06));\r",
          "}\r",
          "\r",
          "\r",
          "float4 PS(PS_IN input) : SV_Target\r",
          "{\r",
          "\tfloat2 p = input.pos / RenderTargetSize - 0.5;\r",
          "\tp.x *= RenderTargetSize.x/RenderTargetSize.y;\r",
          "\t\r",
          "\tfloat3 p3a = float3(p*SubScale + float2(4.2, 0.6) + BaseOffset, SubSpeed * Time);\r",
          "    float resultA = fnoise(p3a);\r",
          "    \r",
          "\tfloat3 p3b = float3(p*MainScale + float2(4.2, 0.6) + BaseOffset, SubShift * resultA + Time * MainSpeed);\r",
          "    float resultB = fnoise(p3b);\r",
          "    \r",
          "    float result = lerp(resultA, resultB, SubStrength);\r",
          "    result = pow( result, Bias);\r",
          "    \r",
          "\treturn float4(Color.rgb * result,1);\r",
          "\r",
          "}\r",
          "//<<< PS\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Time",
      "MetaInstanceID": "5a115f82-986e-4057-8a8e-e5ee3af417dd",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.R",
      "MetaInstanceID": "2acbbedf-4098-4dc9-aee9-fabcaf5b9d67",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.G",
      "MetaInstanceID": "797ca19f-a5d9-4835-8d63-b086d3a53ef8",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.B",
      "MetaInstanceID": "4e789f26-e415-4f68-826c-0991b8976a40",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.A",
      "MetaInstanceID": "03754528-5858-4c0a-8173-8b095eee3716",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SubSpeed",
      "MetaInstanceID": "52c17f1d-1fb0-4063-9bdd-3c38a226d356",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.2"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SubScale",
      "MetaInstanceID": "2269105d-88a7-45db-a5a8-ab5dc6453f7e",
      "DefaultValue": {
        "Type": "Float",
        "Value": "7"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "MainScale",
      "MetaInstanceID": "c4bd04f5-3840-42e9-bbf4-31143c3552cc",
      "DefaultValue": {
        "Type": "Float",
        "Value": "4"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "BaseOffset.X",
      "MetaInstanceID": "8f882516-30bf-4d44-b966-0ddf5ba53634",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "BaseOffset.Y",
      "MetaInstanceID": "cb702c29-5282-4a61-9246-0c3d6eaf3d67",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SubStrength",
      "MetaInstanceID": "d8ddb156-84c1-45e3-89a7-520e825cb0c4",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SubShift",
      "MetaInstanceID": "42e72bc5-0c5d-48e6-87f0-482e517a348b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1.1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "MainSpeed",
      "MetaInstanceID": "248da8c7-2a8f-4fa8-9fd3-51eb50af2f6d",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Bias",
      "MetaInstanceID": "ffdadde9-1e14-4829-8fda-4f30563bf798",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "07e8f06e-c05c-4dd6-8e05-bb2d493f3ebc",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "7309297b-8141-4b92-b925-9a5e434a1fb1",
      "MetaID": "7c67ef25-49ed-426b-bab2-5828d5c0b521",
      "Name": "SmokeNoiseFunc",
      "Version": "de00f483-5ec3-4e97-acd0-438b99a09d9c",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "using System.Runtime.InteropServices;",
        "using Buffer = SharpDX.Direct3D11.Buffer;",
        "",
        "namespace Framefield.Core.ID7c67ef25_49ed_426b_bab2_5828d5c0b521",
        "{",
        "    public class Class_SmokeNoise : FXImageFunction",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Time = 1,",
        "            ColorR = 2,",
        "            ColorG = 3,",
        "            ColorB = 4,",
        "            ColorA = 5,",
        "            SubSpeed = 6,",
        "            SubScale = 7,",
        "            MainScale = 8,",
        "            BaseOffsetX = 9,",
        "            BaseOffsetY = 10,",
        "            SubStrength = 11,",
        "            SubShift = 12,",
        "            MainSpeed = 13,",
        "            Bias = 14",
        "        }",
        "        //<<< _inputids",
        "",
        "        //int[] _permutationTable = new int[512];",
        "        //int _permutaionTableSize = 512 * 4 * 4; // 512 entries * intSize * 16byte alignment padding",
        "        //Buffer _permutationTableConstBuffer;",
        "",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx)",
        "        {",
        "            return PrepareAndEvalOnChange(context, () =>",
        "            {",
        "                //>>> _params",
        "                var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "                var Time = inputs[(int)InputId.Time].Eval(context).Value;",
        "                var ColorR = inputs[(int)InputId.ColorR].Eval(context).Value;",
        "                var ColorG = inputs[(int)InputId.ColorG].Eval(context).Value;",
        "                var ColorB = inputs[(int)InputId.ColorB].Eval(context).Value;",
        "                var ColorA = inputs[(int)InputId.ColorA].Eval(context).Value;",
        "                var Color = new Color4(ColorR, ColorG, ColorB, ColorA);",
        "                var SubSpeed = inputs[(int)InputId.SubSpeed].Eval(context).Value;",
        "                var SubScale = inputs[(int)InputId.SubScale].Eval(context).Value;",
        "                var MainScale = inputs[(int)InputId.MainScale].Eval(context).Value;",
        "                var BaseOffsetX = inputs[(int)InputId.BaseOffsetX].Eval(context).Value;",
        "                var BaseOffsetY = inputs[(int)InputId.BaseOffsetY].Eval(context).Value;",
        "                var BaseOffset = new Vector2(BaseOffsetX, BaseOffsetY);",
        "                var SubStrength = inputs[(int)InputId.SubStrength].Eval(context).Value;",
        "                var SubShift = inputs[(int)InputId.SubShift].Eval(context).Value;",
        "                var MainSpeed = inputs[(int)InputId.MainSpeed].Eval(context).Value;",
        "                var Bias = inputs[(int)InputId.Bias].Eval(context).Value;",
        "                //<<< _params",
        "",
        "                    ",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));             ",
        "",
        "                //>>> _setup",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Time\").AsScalar().Set(Time);",
        "                    _effect.GetVariableByName(\"Color\").AsVector().Set(new Vector4(ColorR, ColorG, ColorB, ColorA));",
        "                    _effect.GetVariableByName(\"SubSpeed\").AsScalar().Set(SubSpeed);",
        "                    _effect.GetVariableByName(\"SubScale\").AsScalar().Set(SubScale);",
        "                    _effect.GetVariableByName(\"MainScale\").AsScalar().Set(MainScale);",
        "                    _effect.GetVariableByName(\"BaseOffset\").AsVector().Set(new Vector2(BaseOffsetX, BaseOffsetY));",
        "                    _effect.GetVariableByName(\"SubStrength\").AsScalar().Set(SubStrength);",
        "                    _effect.GetVariableByName(\"SubShift\").AsScalar().Set(SubShift);",
        "                    _effect.GetVariableByName(\"MainSpeed\").AsScalar().Set(MainSpeed);",
        "                    _effect.GetVariableByName(\"Bias\").AsScalar().Set(Bias);",
        "                //<<< _setup",
        "",
        "                    Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "7309297b-8141-4b92-b925-9a5e434a1fb1",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "07e8f06e-c05c-4dd6-8e05-bb2d493f3ebc"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "11e957d9-abdb-46aa-8768-978fdc0dba8f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7309297b-8141-4b92-b925-9a5e434a1fb1"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5a115f82-986e-4057-8a8e-e5ee3af417dd",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7309297b-8141-4b92-b925-9a5e434a1fb1"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2acbbedf-4098-4dc9-aee9-fabcaf5b9d67",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7309297b-8141-4b92-b925-9a5e434a1fb1"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "797ca19f-a5d9-4835-8d63-b086d3a53ef8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7309297b-8141-4b92-b925-9a5e434a1fb1"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4e789f26-e415-4f68-826c-0991b8976a40",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7309297b-8141-4b92-b925-9a5e434a1fb1"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "03754528-5858-4c0a-8173-8b095eee3716",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7309297b-8141-4b92-b925-9a5e434a1fb1"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "52c17f1d-1fb0-4063-9bdd-3c38a226d356",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7309297b-8141-4b92-b925-9a5e434a1fb1"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2269105d-88a7-45db-a5a8-ab5dc6453f7e",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7309297b-8141-4b92-b925-9a5e434a1fb1"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c4bd04f5-3840-42e9-bbf4-31143c3552cc",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7309297b-8141-4b92-b925-9a5e434a1fb1"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8f882516-30bf-4d44-b966-0ddf5ba53634",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7309297b-8141-4b92-b925-9a5e434a1fb1"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "cb702c29-5282-4a61-9246-0c3d6eaf3d67",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7309297b-8141-4b92-b925-9a5e434a1fb1"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d8ddb156-84c1-45e3-89a7-520e825cb0c4",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7309297b-8141-4b92-b925-9a5e434a1fb1"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "42e72bc5-0c5d-48e6-87f0-482e517a348b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7309297b-8141-4b92-b925-9a5e434a1fb1"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "248da8c7-2a8f-4fa8-9fd3-51eb50af2f6d",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7309297b-8141-4b92-b925-9a5e434a1fb1"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ffdadde9-1e14-4829-8fda-4f30563bf798",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7309297b-8141-4b92-b925-9a5e434a1fb1"
    }
  ]
}