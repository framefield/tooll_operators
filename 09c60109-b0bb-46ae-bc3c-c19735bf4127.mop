{
  "Name": "FlatImageShader",
  "_id": "09c60109-b0bb-46ae-bc3c-c19735bf4127",
  "Namespace": "projects.plonk.shaders",
  "Description": "",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "9aa64d63-64a9-4482-8f23-ebe7a4ecebe0",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "float4x4 objectToWorldMatrix;\r",
          "float4x4 worldToCameraMatrix;\r",
          "float4x4 cameraToObjectMatrix; // modelview inverse\r",
          "float4x4 projMatrix;\r",
          "float4x4 textureMatrix;\r",
          "\r",
          "//>>> _parameters\r",
          "Texture2D Background;",
          "float4 Color;",
          "//<<< _parameters\r",
          "\r",
          "float2 RenderTargetSize;\r",
          "\r",
          "\r",
          "Texture2D txDiffuse;\r",
          "\r",
          "\r",
          "SamplerState samLinear\r",
          "{\r",
          "    Filter = MIN_MAG_MIP_LINEAR;\r",
          "    AddressU = Wrap;\r",
          "    AddressV = Wrap;\r",
          "};\r",
          "\r",
          "\r",
          "struct VS_IN\r",
          "{\r",
          "    float4 pos : POSITION;\r",
          "    float3 normal : NORMAL;\r",
          "    float4 col : COLOR;\r",
          "    float2 texCoord : TEXCOORD0;\r",
          "    float3 tangent : TANGENT0;\r",
          "    float3 binormal : BINORMAL0;\r",
          "};\r",
          "\r",
          "\r",
          "struct PS_IN\r",
          "{\r",
          "    float3 WorldNormal: TEXCOORD1;\r",
          "    float4 pos : SV_POSITION;\r",
          "    float4 posInWorld  : WORLD_POS;\r",
          "    float3 normal : NORMAL;   \r",
          "    float2 texCoord : TEXCOORD0;\r",
          "    float4 vertexColor : COLOR;\r",
          "    float3 fragPosToCamPos : POS;\r",
          "};\r",
          "\r",
          "\r",
          "float mod(float a, float b)\r",
          "{\r",
          "    return a - b*floor(a/b);\r",
          "}\r",
          "\r",
          "float3 mod(float3 a, float b)\r",
          "{\r",
          "    return a - b*floor(a/b);\r",
          "}\r",
          "\r",
          "\r",
          "//>>> VS\r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    float4 WorldPos = mul(input.pos, objectToWorldMatrix);",
          "    float4 WorldNormal = mul(input.normal, objectToWorldMatrix);",
          "",
          "    output.posInWorld = mul(input.pos, objectToWorldMatrix);",
          "    output.pos = mul(output.posInWorld, worldToCameraMatrix);",
          "    output.normal = mul(input.normal, (float3x3)objectToWorldMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = mul(float4(input.texCoord, 0, 1), textureMatrix).xy;",
          "    output.fragPosToCamPos = normalize(mul(cameraToObjectMatrix[3], objectToWorldMatrix) - output.posInWorld);",
          "    output.vertexColor = input.col;",
          "    return output;",
          "}",
          "//<<< VS\r",
          "\r",
          "\r",
          "//>>> PS\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float2 newTexCoords = input.texCoord;\r",
          "    //float3 norm = normalize(input.normal);\r",
          "    float2 bgPos = float2(input.pos.x / RenderTargetSize.x, input.pos.y / RenderTargetSize.y);    \r",
          "    float4 imageColor=Background.Sample(samLinear, bgPos); \r",
          "    return float4(lerp( imageColor.rgb, Color.rgb, Color.a) , 1);\r",
          "}\r",
          "//<<< PS\r",
          "\r",
          "technique10 Render\r",
          "{\r",
          "    pass P0\r",
          "    {\r",
          "        SetGeometryShader( 0 );\r",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );\r",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );\r",
          "    }\r",
          "} "
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Scene",
      "MetaInstanceID": "5b6cf967-270f-48c1-b65b-e54d6f1dff44",
      "DefaultValue": {
        "Type": "Scene",
        "Value": "Framefield.Core.Scene"
      },
      "MetaID": "79122951-7bc4-4c68-b085-866eab828248",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Background",
      "MetaInstanceID": "c9222b2d-ecfc-4c7a-9c75-727df2630847",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Relevant",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.R",
      "MetaInstanceID": "cc49ef53-d6b5-4346-b511-5ecb6ad1f6d7",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.G",
      "MetaInstanceID": "0fc40036-78e5-406c-bef5-e7f4211e2b30",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.B",
      "MetaInstanceID": "d5a66c28-2a8b-40be-a9a5-e8ef3fd3bf08",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.A",
      "MetaInstanceID": "7946e159-8fb1-4233-b3a5-0d7091618f13",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Scene",
      "MetaInstanceID": "ad20b090-e34a-4181-808c-4b10b5fb8c28",
      "MetaID": "79122951-7bc4-4c68-b085-866eab828248"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "7c47f386-8855-469c-a47f-f1617739c82c",
      "MetaID": "c533f1ca-660b-4210-8c89-cf926f498e8e",
      "Name": "FlatImageShaderFunc",
      "Version": "e275acfc-f067-405f-a5f7-2311eec93c55",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "using Framefield.Core.Rendering;",
        "",
        "",
        "namespace Framefield.Core.IDc533f1ca_660b_4210_8c89_cf926f498e8e",
        "{",
        "",
        "    public class Class_FlatImageShader : FXSourceCodeFunction",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Scene = 1,",
        "            Background = 2,",
        "            ColorR = 3,",
        "            ColorG = 4,",
        "            ColorB = 5,",
        "            ColorA = 6",
        "        }",
        "        //<<< _inputids",
        "        #region Renderer",
        "        public class Renderer : BaseRenderer",
        "        {",
        "            public override void SetupEffect(OperatorPartContext context) {",
        "                base.SetupEffect(context);",
        "",
        "                try {",
        "                    SetupMaterialConstBuffer(context);",
        "                    SetupFogSettingsConstBuffer(context);",
        "                    SetupPointLightsConstBuffer(context);",
        "                }",
        "                catch (Exception e) {",
        "                    Logger.Error(ParentFunc, \"Error building constant buffer: {0} - Source: {1}\", e.Message, e.Source);",
        "                }",
        "            }",
        "            public OperatorPart.Function ParentFunc {get;set;}            ",
        "        }",
        "        #endregion",
        "",
        "        public Class_FlatImageShader() {",
        "            _renderer = new Renderer(){ParentFunc = this};",
        "        }",
        "",
        "        public override void Dispose() {",
        "            Utilities.DisposeObj(ref _renderer);",
        "            base.Dispose();",
        "        }",
        "",
        "        bool _firstEval = true;",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            // >>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Scene = inputs[(int)InputId.Scene];",
        "            var Background = inputs[(int)InputId.Background].Eval(context).Image; // Needs to be checked for null!",
        "            var ColorR = inputs[(int)InputId.ColorR].Eval(context).Value;",
        "            var ColorG = inputs[(int)InputId.ColorG].Eval(context).Value;",
        "            var ColorB = inputs[(int)InputId.ColorB].Eval(context).Value;",
        "            var ColorA = inputs[(int)InputId.ColorA].Eval(context).Value;",
        "            var Color = new Color4(ColorR, ColorG, ColorB, ColorA);",
        "            // <<< _params",
        "            ",
        "            if(Background == null)",
        "                return context;",
        "            ",
        "            if (_firstEval) {",
        "                for (int i = 0; i < NumCodes(); ++i)",
        "                    Compile(i);",
        "                _firstEval = false;",
        "                Changed = true;",
        "            }",
        "",
        "            using (new PropertyStasher<OperatorPartContext>(context, \"Effect\", \"Renderer\")) ",
        "            ",
        "            using (var BackgroundView = new ShaderResourceView(context.D3DDevice, Background))",
        "            {",
        "                _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(context.Viewport.Width, context.Viewport.Height));",
        "                _effect.GetVariableByName(\"Background\").AsShaderResource().SetResource(BackgroundView);",
        "                _effect.GetVariableByName(\"Color\").AsVector().Set( Color);",
        "       ",
        "                context.Effect = _effect;",
        "                context.Renderer = _renderer;",
        "                Scene.Eval(context);",
        "            }                       ",
        "            return context;",
        "        }",
        "",
        "        Renderer _renderer;",
        "    }",
        "}",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "7c47f386-8855-469c-a47f-f1617739c82c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "ad20b090-e34a-4181-808c-4b10b5fb8c28"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9aa64d63-64a9-4482-8f23-ebe7a4ecebe0",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7c47f386-8855-469c-a47f-f1617739c82c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5b6cf967-270f-48c1-b65b-e54d6f1dff44",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7c47f386-8855-469c-a47f-f1617739c82c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c9222b2d-ecfc-4c7a-9c75-727df2630847",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7c47f386-8855-469c-a47f-f1617739c82c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "cc49ef53-d6b5-4346-b511-5ecb6ad1f6d7",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7c47f386-8855-469c-a47f-f1617739c82c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0fc40036-78e5-406c-bef5-e7f4211e2b30",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7c47f386-8855-469c-a47f-f1617739c82c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d5a66c28-2a8b-40be-a9a5-e8ef3fd3bf08",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7c47f386-8855-469c-a47f-f1617739c82c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "7946e159-8fb1-4233-b3a5-0d7091618f13",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7c47f386-8855-469c-a47f-f1617739c82c"
    }
  ]
}