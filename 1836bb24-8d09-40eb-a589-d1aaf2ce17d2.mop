{
  "Name": "DepthToColorLinear",
  "_id": "1836bb24-8d09-40eb-a589-d1aaf2ce17d2",
  "Namespace": "user.cynic",
  "Description": "converts depth buffer into grayscale color buffer [0..1] and linearizes the logarithmic scale",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "144b6d91-e4b6-4a3b-a953-dfe6bdb84362",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "float2 Range;\r",
          "\r",
          "//>>> _parameters\r",
          "Texture2D Image;",
          "//<<< _parameters\r",
          "Texture2D txDepth;\r",
          " \r",
          "//>>> __setup\r",
          "SamplerState samLinear",
          "{",
          "    Filter = MIN_MAG_MIP_POINT;",
          "    AddressU = Clamp;",
          "    AddressV = Clamp;",
          "};",
          "//<<< _setup\r",
          "\r",
          "//>>> _declarations\r",
          "struct VS_IN",
          "{",
          "    float4 pos : POSITION;",
          "    float2 texCoord : TEXCOORD;",
          "};",
          "",
          "struct PS_IN",
          "{",
          "    float4 pos : SV_POSITION;",
          "    float2 texCoord: TEXCOORD0;",
          "};",
          "//<<< _declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "\r",
          "\r",
          "//>>> PS\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float n = Range.x;\r",
          "    float f = Range.y;\r",
          "    float3 depth = txDepth.Sample(samLinear, input.texCoord).rgb;\r",
          "    float c = (2.0 * n) / (f + n - depth * (f - n));\r",
          "    //float c = (depth - Range.x)/(Range.y - Range.x);\r",
          "\r",
          "    return float4(c, c, c, 1);\r",
          "}\r",
          "//<<< PS\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Image",
      "MetaInstanceID": "1afe77f1-3afa-4160-b4e9-50ac7fd1b2f4",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Camera",
      "MetaInstanceID": "ce824720-95a7-49ad-a066-5b5258c2ad8f",
      "DefaultValue": {
        "Type": "Dynamic",
        "Value": "Framefield.Core.Dynamic"
      },
      "MetaID": "9701d534-b3ff-4889-a250-84aece4a7d76",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "dbee1262-922c-410a-902f-85a5fd83875a",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "b0b1c5a3-fe65-4029-96d5-64c7bdc66e14",
      "MetaID": "a56bb365-8d12-4000-9a55-8e545c7f94a1",
      "Name": "DepthToColorLinearFunc",
      "Version": "b5d3574f-d47a-4e0b-8120-e25b9fbb1225",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "using SharpDX.Direct3D;",
        "using SharpDX.DXGI;",
        "",
        "namespace Framefield.Core.IDa56bb365_8d12_4000_9a55_8e545c7f94a1",
        "{",
        "    public class Class_DepthToColorLinear : FXImageFunction",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Image = 1,",
        "            Camera = 2",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Image = inputs[(int)InputId.Image].Eval(context).DepthImage; // Needs to be checked for null!",
        "            var Camera = inputs[(int)InputId.Camera].Eval(context).Dynamic;  // Needs to be checked for null!",
        "            //<<< _params",
        "",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 1));",
        "",
        "                var camProvider = Camera.This as Framefield.Core.OperatorPartTraits.ICameraProvider;",
        "                if (camProvider == null)",
        "                {",
        "                    Logger.Error(this, \"camera not defined\");",
        "                    return;",
        "                }",
        "",
        "                var shaderDesc = new ShaderResourceViewDescription();",
        "                shaderDesc.Format = Format.R32_Float;",
        "                shaderDesc.Dimension = ShaderResourceViewDimension.Texture2D;",
        "                shaderDesc.Texture2D.MipLevels = 1;",
        "                using (var depthTexture = new ShaderResourceView(context.D3DDevice, Image, shaderDesc))",
        "                {",
        "                    _effect.GetVariableByName(\"txDepth\").AsShaderResource().SetResource(depthTexture); ",
        "",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Range\").AsVector().Set(camProvider.GetLastNearFarClip());",
        "                    Logger.Info(this, \"nearFar: {0}\", camProvider.GetLastNearFarClip());",
        "                    Render(context);",
        "                }",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b0b1c5a3-fe65-4029-96d5-64c7bdc66e14",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "dbee1262-922c-410a-902f-85a5fd83875a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "144b6d91-e4b6-4a3b-a953-dfe6bdb84362",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "b0b1c5a3-fe65-4029-96d5-64c7bdc66e14"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "1afe77f1-3afa-4160-b4e9-50ac7fd1b2f4",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "b0b1c5a3-fe65-4029-96d5-64c7bdc66e14"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ce824720-95a7-49ad-a066-5b5258c2ad8f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "b0b1c5a3-fe65-4029-96d5-64c7bdc66e14"
    }
  ]
}