{
  "Name": "ZebraZShader",
  "_id": "ef549016-744f-4d05-b55c-daeece1e62a9",
  "Namespace": "projects.igravity.shaders",
  "Description": "Renders Geometry with a zebra-pattern defined by the distance to the camera-plane.",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "25a940b0-37ad-4e64-98c7-289f973c68c8",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "float4x4 worldToCameraMatrix;\r",
          "float4x4 projMatrix;\r",
          "float4x4 textureMatrix;\r",
          "\r",
          "         \r",
          "float4x4 InverseProjectionMatrix;\r",
          "\r",
          "float4 ColorA;",
          "float4 ColorB;",
          "float2 Width;",
          "float Offset;",
          "\r",
          "Texture2D txDiffuse;\r",
          "\r",
          "SamplerState samLinear\r",
          "{\r",
          "    Filter = MIN_MAG_MIP_LINEAR;\r",
          "    AddressU = Wrap;\r",
          "    AddressV = Wrap;\r",
          "};\r",
          "\r",
          "struct VS_IN\r",
          "{\r",
          "    float4 pos : POSITION;\r",
          "    float3 normal: NORMAL;\r",
          "    float4 col : COLOR;\r",
          "    float2 texCoord : TEXCOORD;\r",
          "    float3 tangent: TANGENT;\r",
          "    float3 binormal: BINORMAL;\r",
          "};\r",
          "\r",
          "struct PS_IN\r",
          "{\r",
          "    \r",
          "    sample float4 pos : SV_POSITION;\r",
          "    sample float4 col : COLOR;\r",
          "    sample float2 texCoord: TEXCOORD0;\r",
          "};\r",
          "\r",
          "PS_IN VS( VS_IN input )\r",
          "{\r",
          "    PS_IN output = (PS_IN)0;\r",
          "\r",
          "    output.pos = mul(input.pos, worldToCameraMatrix);\r",
          "    output.pos = mul(output.pos, projMatrix);\r",
          "    output.col = input.col;\r",
          "    output.texCoord = mul(float4(input.texCoord.xy, 0, 1), textureMatrix).xy;\r",
          "    \r",
          "\r",
          "    return output;\r",
          "}\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    //float b= (input.pos.x /7 + input.pos.y /3 - 3)  % 10 /10;\r",
          "    //return float4(b,b,b,1);\r",
          "\r",
          "    float4 colr=txDiffuse.Sample(samLinear, input.texCoord) * input.col;\r",
          "    float depth = mul(input.pos, InverseProjectionMatrix).z;\r",
          "    float sumWidth = Width.x+Width.y;\r",
          "    float mod= (depth+Offset) % sumWidth;    \r",
          "    colr *= mod > Width.x ? ColorA : ColorB;\r",
          "        \r",
          "    return  colr;\r",
          "}\r",
          "\r",
          "technique10 Render\r",
          "{\r",
          "    pass P0\r",
          "    {\r",
          "        SetGeometryShader( 0 );\r",
          "        SetVertexShader( CompileShader( vs_5_0, VS() ) );\r",
          "        SetPixelShader( CompileShader( ps_5_0, PS() ) );\r",
          "    }\r",
          "}\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Scene",
      "MetaInstanceID": "4ec58d54-0792-4472-9ad1-b81910975e72",
      "DefaultValue": {
        "Type": "Scene",
        "Value": "Framefield.Core.Scene"
      },
      "MetaID": "79122951-7bc4-4c68-b085-866eab828248",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ColorA.R",
      "MetaInstanceID": "49599acc-3125-4e5b-ba2d-5032c7daa5b6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ColorA.G",
      "MetaInstanceID": "ba9f9f93-d5d2-422b-9022-1c5a1e951fa6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ColorA.B",
      "MetaInstanceID": "0b752219-37ca-4f26-8936-ad055f113bf6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ColorA.A",
      "MetaInstanceID": "2bbc2abd-cbe6-4a41-be2f-f1875ce0c1c8",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ColorB.R",
      "MetaInstanceID": "43a9cc36-85f0-410c-bdb1-c9b7d34e9c6a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ColorB.G",
      "MetaInstanceID": "b255926e-504e-422f-8012-b427e65f0750",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "0",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ColorB.B",
      "MetaInstanceID": "aa820f82-5eda-4b95-ae77-8a192664f714",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ColorB.A",
      "MetaInstanceID": "dc6d9a26-1b7f-4fb9-b2c7-6c207b9d9bf5",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Width.A",
      "MetaInstanceID": "3c10823c-12d9-4b12-96b6-a7c25d080571",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Width.B",
      "MetaInstanceID": "909bbe5e-e7f9-437d-af80-dc2dc2d5a37c",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Offset",
      "MetaInstanceID": "db8b9313-75d4-4e75-b1d3-b94a70f5d400",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Scene",
      "MetaInstanceID": "c097342f-a373-42e1-8b6d-cd95e9f50f75",
      "MetaID": "79122951-7bc4-4c68-b085-866eab828248"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "677db0d5-51ae-47cb-b825-a06af3658db8",
      "MetaID": "7f09f44f-62cc-4b93-ae48-fe93cfbce01c",
      "Name": "ZebraZShaderFunc",
      "Version": "aad20746-dca8-4488-9508-1ee79502b113",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "using System;",
        "using System.Collections.Generic;",
        "using System.Runtime.InteropServices;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using Framefield.Core.Rendering;",
        "using Buffer = SharpDX.Direct3D11.Buffer;",
        "",
        "namespace Framefield.Core.ID7f09f44f_62cc_4b93_ae48_fe93cfbce01c",
        "{",
        "    public class Class_ZebraZShader : FXSourceCodeFunction, IFXSceneSourceCode, IMaterial",
        "    {",
        "",
        "        class Renderer : BaseRenderer",
        "        {",
        "        }",
        "",
        "        public override void Dispose() {",
        "            Utilities.DisposeObj(ref _renderer);",
        "            base.Dispose();",
        "        }",
        "",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Scene = 1,",
        "            ColorAR = 2,",
        "            ColorAG = 3,",
        "            ColorAB = 4,",
        "            ColorAA = 5,",
        "            ColorBR = 6,",
        "            ColorBG = 7,",
        "            ColorBB = 8,",
        "            ColorBA = 9,",
        "            WidthA = 10,",
        "            WidthB = 11,",
        "            Offset = 12",
        "        }",
        "        //<<< _inputids",
        "        bool _firstEval = true;",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Scene = inputs[(int)InputId.Scene];",
        "            var ColorAR = inputs[(int)InputId.ColorAR].Eval(context).Value;",
        "            var ColorAG = inputs[(int)InputId.ColorAG].Eval(context).Value;",
        "            var ColorAB = inputs[(int)InputId.ColorAB].Eval(context).Value;",
        "            var ColorAA = inputs[(int)InputId.ColorAA].Eval(context).Value;",
        "            var ColorA = new Color4(ColorAR, ColorAG, ColorAB, ColorAA);",
        "            var ColorBR = inputs[(int)InputId.ColorBR].Eval(context).Value;",
        "            var ColorBG = inputs[(int)InputId.ColorBG].Eval(context).Value;",
        "            var ColorBB = inputs[(int)InputId.ColorBB].Eval(context).Value;",
        "            var ColorBA = inputs[(int)InputId.ColorBA].Eval(context).Value;",
        "            var ColorB = new Color4(ColorBR, ColorBG, ColorBB, ColorBA);",
        "            var WidthA = inputs[(int)InputId.WidthA].Eval(context).Value;",
        "            var WidthB = inputs[(int)InputId.WidthB].Eval(context).Value;",
        "            var Width = new Vector2(WidthA, WidthB);",
        "            var Offset = inputs[(int)InputId.Offset].Eval(context).Value;",
        "            //<<< _params",
        "        ",
        "            if (_firstEval) {",
        "                for (int i = 0; i < NumCodes(); ++i)",
        "                    Compile(i);",
        "                _firstEval = false;",
        "                Changed = true;",
        "            }",
        "",
        "            var prevEffect = context.Effect;",
        "            var prevRenderer = context.Renderer;",
        "            context.Effect = _effect;",
        "            context.Renderer = _renderer;",
        "            ",
        "            //_effect.GetVariableByName(\"inverseProjMatrix\").AsMatrix().Set();",
        "            ",
        "            //Logger.Info(\"{}\", Matrix.Invert(context.CameraProjection));",
        "",
        "",
        "            _effect.GetVariableByName(\"ColorA\").AsVector().Set(new Vector4(ColorAR, ColorAG, ColorAB,ColorAA)); ",
        "            _effect.GetVariableByName(\"ColorB\").AsVector().Set(new Vector4(ColorBR, ColorBG, ColorBB,ColorBA)); ",
        "            _effect.GetVariableByName(\"Width\").AsVector().Set(new Vector2(WidthA, WidthB)); ",
        "            _effect.GetVariableByName(\"Offset\").AsScalar().Set(Offset); ",
        "            var v = _effect.GetVariableByName(\"InverseProjectionMatrix\").AsMatrix();",
        "            v.SetMatrix(Matrix.Invert(context.CameraProjection)); ",
        "            ",
        "",
        "            Scene.Eval(context);",
        "            ",
        "            context.Effect = prevEffect;",
        "            context.Renderer = prevRenderer;",
        "",
        "            return context;",
        "        }",
        "",
        "        private Renderer _renderer = new Renderer();",
        "",
        "        public Color4 Ambient { get; private set; }",
        "        public Color4 Diffuse { get; private set; }",
        "        public Color4 Specular { get; private set; }",
        "        public Color4 Emission { get; private set; }",
        "        public float Shininess { get; private set; }",
        "    }",
        "}",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "677db0d5-51ae-47cb-b825-a06af3658db8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c097342f-a373-42e1-8b6d-cd95e9f50f75"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "25a940b0-37ad-4e64-98c7-289f973c68c8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "677db0d5-51ae-47cb-b825-a06af3658db8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4ec58d54-0792-4472-9ad1-b81910975e72",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "677db0d5-51ae-47cb-b825-a06af3658db8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "49599acc-3125-4e5b-ba2d-5032c7daa5b6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "677db0d5-51ae-47cb-b825-a06af3658db8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ba9f9f93-d5d2-422b-9022-1c5a1e951fa6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "677db0d5-51ae-47cb-b825-a06af3658db8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0b752219-37ca-4f26-8936-ad055f113bf6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "677db0d5-51ae-47cb-b825-a06af3658db8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2bbc2abd-cbe6-4a41-be2f-f1875ce0c1c8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "677db0d5-51ae-47cb-b825-a06af3658db8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "43a9cc36-85f0-410c-bdb1-c9b7d34e9c6a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "677db0d5-51ae-47cb-b825-a06af3658db8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b255926e-504e-422f-8012-b427e65f0750",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "677db0d5-51ae-47cb-b825-a06af3658db8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "aa820f82-5eda-4b95-ae77-8a192664f714",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "677db0d5-51ae-47cb-b825-a06af3658db8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "dc6d9a26-1b7f-4fb9-b2c7-6c207b9d9bf5",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "677db0d5-51ae-47cb-b825-a06af3658db8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "3c10823c-12d9-4b12-96b6-a7c25d080571",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "677db0d5-51ae-47cb-b825-a06af3658db8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "909bbe5e-e7f9-437d-af80-dc2dc2d5a37c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "677db0d5-51ae-47cb-b825-a06af3658db8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "db8b9313-75d4-4e75-b1d3-b94a70f5d400",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "677db0d5-51ae-47cb-b825-a06af3658db8"
    }
  ]
}