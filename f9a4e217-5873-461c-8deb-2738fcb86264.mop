{
  "Name": "WebSocket",
  "_id": "f9a4e217-5873-461c-8deb-2738fcb86264",
  "Namespace": "lib.io",
  "Description": "",
  "Inputs": [
    {
      "Name": "URL",
      "MetaInstanceID": "cae59b9e-39b0-4f3b-983f-7fd1d3be94aa",
      "DefaultValue": {
        "Type": "Text",
        "Value": "ws://qrcontrol.qreepy.com:8080/"
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "PlayerActions",
      "MetaInstanceID": "4445b85c-1471-4330-88b3-776adc2c6b7b",
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "c68f214b-87c6-47c3-a76b-3d89fb7039f5",
      "MetaID": "52158493-c00e-488e-b9f4-16b5bdbf32b3",
      "Name": "WebSocketFunc",
      "Version": "aae75479-29f9-46e2-9f60-63ace8541c2d",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "using WebSocket4Net;",
        "using System.Threading;",
        "",
        "namespace Framefield.Core.ID52158493_c00e_488e_b9f4_16b5bdbf32b3",
        "{",
        "    public class Class_WebSocket : OperatorPart.Function, Framefield.Core.OperatorPartTraits.ITimeAccessor",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            URL = 0",
        "        }",
        "        //<<< _inputids",
        "",
        "",
        "        private void setupWebSocket(string url) {",
        "            if (_webSocket != null) {",
        "                _webSocket.MessageReceived -= HandleReceivedMessage;",
        "                _webSocket.Closed -= websocket_Closed;",
        "                _webSocket.Error -= websocket_Error;",
        "                _webSocket.Opened -= websocket_Opened;",
        "                _webSocket.Close();",
        "            }",
        "",
        "            _webSocket = new WebSocket(url);",
        "            _url = url;",
        "",
        "            _webSocket.MessageReceived += new EventHandler<MessageReceivedEventArgs>(HandleReceivedMessage);",
        "            _webSocket.Closed += new EventHandler(websocket_Closed);",
        "            _webSocket.Error += new EventHandler<SuperSocket.ClientEngine.ErrorEventArgs>(websocket_Error);",
        "            _webSocket.Opened += new EventHandler(websocket_Opened);",
        "            _webSocket.Open();",
        "        }",
        "",
        "        private static ManualResetEvent m_ClosedEvent = new ManualResetEvent(false);",
        "",
        "        private const int m_TimerSpan = 5;",
        "",
        "        void websocket_Opened(object sender, EventArgs e) {",
        "            lock (_resultBuilder) {",
        "                string timestamp = \"5711\";",
        "                string game = \"53\";",
        "                string action = \"start\";",
        "                string message = \"{\\\"Timestamp\\\":\\\"\" + timestamp + \"\\\",\\\"Game\\\":\\\"\" + game + \"\\\",\\\"Action\\\":\\\"\" + action + \"\\\"}\";",
        "                _webSocket.Send(message);",
        "            }",
        "        }",
        "",
        "        private void websocket_Error(object sender, SuperSocket.ClientEngine.ErrorEventArgs e) {",
        "        }",
        "",
        "        private void websocket_Closed(object sender, EventArgs e) {",
        "        }",
        "",
        "        private void HandleReceivedMessage(object sender, MessageReceivedEventArgs args) {",
        "            lock (_resultBuilder) {",
        "                _resultBuilder.Append(args.Message);",
        "            }",
        "        }",
        "",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var URL = inputs[(int)InputId.URL].Eval(context).Text;",
        "            //<<< _params",
        "",
        "            if (URL != _url) {",
        "                setupWebSocket(URL);",
        "            }",
        "",
        "            lock (_resultBuilder) {",
        "                context.Text = _resultBuilder.ToString();",
        "                _resultBuilder.Clear();",
        "            }",
        "            return context;",
        "        }",
        "",
        "        WebSocket _webSocket = null;",
        "        string _url = string.Empty;",
        "        StringBuilder _resultBuilder = new StringBuilder();",
        "    }",
        "}",
        "",
        ""
      ],
      "AdditionalAssemblies": [
        "Libs/WebSocket4Net.dll"
      ]
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "cae59b9e-39b0-4f3b-983f-7fd1d3be94aa",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c68f214b-87c6-47c3-a76b-3d89fb7039f5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c68f214b-87c6-47c3-a76b-3d89fb7039f5",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4445b85c-1471-4330-88b3-776adc2c6b7b"
    }
  ]
}