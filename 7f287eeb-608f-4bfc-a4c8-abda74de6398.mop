{
  "Name": "Layer2dWithZ",
  "_id": "7f287eeb-608f-4bfc-a4c8-abda74de6398",
  "Namespace": "lib.geometry.generate",
  "Description": "Draws an image fitting into current view.",
  "Inputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "916adc4d-f5eb-4eb5-a76c-0a3b9741280a",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "MultiplyColor.R",
      "MetaInstanceID": "98ab8165-faed-4e97-80b4-722e944bf7a2",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "MultiplyColor.G",
      "MetaInstanceID": "8a1e4f5d-747e-434c-8266-563078891f30",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "MultiplyColor.B",
      "MetaInstanceID": "11eac062-afaf-42bd-905a-35937ee8e5e8",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "MultiplyColor.A",
      "MetaInstanceID": "61aeb566-dd97-4baa-8b79-2f2c60da57f4",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Scene",
      "MetaInstanceID": "456510ef-2faf-4aa0-b9f8-bc6c67b3c8e1",
      "MetaID": "79122951-7bc4-4c68-b085-866eab828248"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "33b62a6c-8795-45fb-8007-87742f20fa40",
      "MetaID": "25804797-d21e-4abd-8442-12ac343ee0c3",
      "Name": "Layer2dWithZFunc",
      "Version": "3f397846-60b8-4ee5-ab4d-aa830773c817",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D;",
        "using SharpDX.D3DCompiler;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.DXGI;",
        "using Framefield.Core.Rendering;",
        "",
        "namespace Framefield.Core.ID25804797_d21e_4abd_8442_12ac343ee0c3",
        "{",
        "    public class Class_Layer2dWithZ : OperatorPart.Function",
        "    {",
        "        public Class_Layer2dWithZ()",
        "        {",
        "            try",
        "            {",
        "                using (var bytecode = ShaderBytecode.CompileFromFile(\"assets-common/fx/Layer2d.fx\", \"fx_5_0\", ShaderFlags.None, EffectFlags.None, null, null))",
        "                    _effect = new Effect(D3DDevice.Device, bytecode);",
        "                _renderer = new BaseRenderer();",
        "            }",
        "            catch (Exception e)",
        "            {",
        "                Logger.Error(this,\"error loading laye2d fx: {0} \", e.Message);",
        "            }",
        "        }",
        "",
        "        public override void  Dispose()",
        "        {",
        "            Utilities.DisposeObj(ref _effect);",
        "            Utilities.DisposeObj(ref _renderer);",
        "        }",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx)",
        "        {",
        "            var Image = inputs[0].Eval(context).Image; if (Image == null) return context;",
        "            var MultiplyColor = Utilities.EvaluateVector4(context, inputs, 1);",
        "",
        "            var subContext = new OperatorPartContext(context);",
        "            subContext.Effect = _effect;",
        "            subContext.Renderer = _renderer;",
        "            subContext.InputLayout = context.Renderer.ScreenQuadInputLayout;",
        "            subContext.CameraProjection = Matrix.OrthoLH(1, 1, -100, 100);",
        "            subContext.WorldToCamera = Matrix.LookAtLH(new Vector3(0, 0, -5), new Vector3(0, 0, 0), new Vector3(0, 1, 0));",
        "            subContext.ObjectTWorld = Matrix.Identity;",
        "",
        "",
        "            using (var textureView = new ShaderResourceView(context.D3DDevice, Image))",
        "            {",
        "                _effect.GetVariableByName(\"hasDepth\").AsScalar().Set(context.DepthImage != null);",
        "                _effect.GetVariableByName(\"multiplyColor\").AsVector().Set(MultiplyColor);",
        "",
        "",
        "                var depthStencilDescription = new DepthStencilStateDescription();",
        "                if (context.DepthImage != null) {",
        "",
        "                    depthStencilDescription.IsDepthEnabled = true;",
        "                    depthStencilDescription.DepthWriteMask = DepthWriteMask.All;",
        "                    depthStencilDescription.DepthComparison = Comparison.Less;",
        "",
        "                    var shaderDesc = new ShaderResourceViewDescription();",
        "                    shaderDesc.Format = Format.R32_Float;",
        "                    shaderDesc.Dimension = ShaderResourceViewDimension.Texture2D;",
        "                    shaderDesc.Texture2D.MipLevels = 1;",
        "                    using (var depthTexture = new ShaderResourceView(context.D3DDevice, context.DepthImage, shaderDesc))",
        "                    using (var depthStencilState = new DepthStencilState(context.D3DDevice, depthStencilDescription))",
        "                    {",
        "                        _effect.GetVariableByName(\"txDepth\").AsShaderResource().SetResource(depthTexture); ",
        "              ",
        "                        subContext.Texture0 = textureView;",
        "                        subContext.Renderer.SetupEffect(subContext);",
        "",
        "                        subContext.DepthStencilState = depthStencilState;",
        "",
        "                        subContext.Renderer.Render(subContext.Renderer._screenQuadMesh, subContext);",
        "                    }",
        "                }",
        "                else {",
        "                    depthStencilDescription.IsDepthEnabled = false;",
        "                    using (var depthStencilState = new DepthStencilState(context.D3DDevice, depthStencilDescription))",
        "                    {",
        "                        subContext.Texture0 = textureView;",
        "                        subContext.Renderer.SetupEffect(subContext);",
        "    ",
        "                        subContext.DepthStencilState = depthStencilState;",
        "    ",
        "                        subContext.Renderer.Render(subContext.Renderer._screenQuadMesh, subContext);",
        "                    }",
        "                }",
        "",
        "            }",
        "",
        "            return context;",
        "        }",
        "",
        "        Effect _effect;",
        "        BaseRenderer _renderer;",
        "    }",
        "}",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "33b62a6c-8795-45fb-8007-87742f20fa40",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "456510ef-2faf-4aa0-b9f8-bc6c67b3c8e1"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "916adc4d-f5eb-4eb5-a76c-0a3b9741280a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "33b62a6c-8795-45fb-8007-87742f20fa40"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "98ab8165-faed-4e97-80b4-722e944bf7a2",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "33b62a6c-8795-45fb-8007-87742f20fa40"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8a1e4f5d-747e-434c-8266-563078891f30",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "33b62a6c-8795-45fb-8007-87742f20fa40"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "11eac062-afaf-42bd-905a-35937ee8e5e8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "33b62a6c-8795-45fb-8007-87742f20fa40"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "61aeb566-dd97-4baa-8b79-2f2c60da57f4",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "33b62a6c-8795-45fb-8007-87742f20fa40"
    }
  ]
}