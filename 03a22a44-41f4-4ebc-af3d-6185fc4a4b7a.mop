{
  "Name": "TornadoScatter",
  "_id": "03a22a44-41f4-4ebc-af3d-6185fc4a4b7a",
  "Namespace": "lib.geometry.modify",
  "Description": "GPU-based scatter deform derived from StreamOutput. The Geometry is offset along a spline path defined by 2 points and 2 tangents and controlled by various parameters.",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "66af8efa-6efb-4d32-bf25-afd426bcebf1",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _parameters\r",
          "float3 StartPosition;",
          "float3 StartTangent;",
          "float3 EndPosition;",
          "float3 EndTangent;",
          "float Radius;",
          "float4 Move;",
          "float4 Converge;",
          "float4 Twirl;",
          "float4 Shrink;",
          "float4 Scatter;",
          "float4 Distort;",
          "float4 Rotate;",
          "float ShrinkLimit;",
          "//<<< _parameters\r",
          "\r",
          "struct Vertex\r",
          "{\r",
          "    float4 pos : POSITION;\r",
          "    float3 normal : NORMAL;\r",
          "    float4 col : COLOR;\r",
          "    float2 texCoord : TEXCOORD0;\r",
          "    float3 tangent : TANGENT0;\r",
          "    float3 binormal : BINORMAL0;\r",
          "};\r",
          "\r",
          "\r",
          "float getNoise(int x, int seed)\r",
          "{\r",
          "    int n = x + seed*137;\r",
          "    n = (n << 13) ^ n;\r",
          "    return (float) (1.0 - ((n*(n*n*15731 + 789221) + 1376312589) & 0x7fffffff)/1073741824.0);\r",
          "}\r",
          "\r",
          "\r",
          "\r",
          "float3 SplinePosition( float u) \r",
          "{\r",
          "    float s1 = u*u*(3 - 2*u);  // SmoothStep\r",
          "    return (1-u) * (StartPosition + s1 * StartTangent) + u * (EndPosition+ (1-s1) * EndTangent);\r",
          "}\r",
          "\r",
          "\r",
          "float BiasedValue(float u, float aValue, float aBias, float bValue, float bBias) \r",
          "{\r",
          "    float fadeA= (float)pow(   u, pow( 0.5, -aBias));\r",
          "    float fadeB= (float)pow( 1-u, pow( 0.5, -bBias));\r",
          "    float v= fadeA * (1 - u) + u * (1-fadeB);\r",
          "    return aValue+v*(bValue-aValue);\r",
          "}\r",
          "\r",
          "\r",
          "\r",
          "Vertex VertexMain(Vertex input)\r",
          "{\r",
          "    return input;\r",
          "}\r",
          "\r",
          "\r",
          "\r",
          "[maxvertexcount(3)]\r",
          "void GeometryMain(triangle Vertex input[3], inout TriangleStream<Vertex> outputStream)\r",
          "{\r",
          "    float3 pCenter = (input[0].pos.xyz + input[1].pos.xyz + input[2].pos.xyz)/3;\r",
          "    \r",
          "    float randomSeedf= ((input[0].pos.x + input[1].pos.x + input[2].pos.x) / 3 +\r",
          "                (input[0].pos.y + input[1].pos.y + input[2].pos.y) / 3 -\r",
          "                (input[0].pos.z + input[1].pos.z + input[2].pos.z) / 3) * 100;\r",
          "    int seed = (int)randomSeedf;\r",
          "\r",
          "\r",
          "    \r",
          "    float3 direction = (pCenter-StartPosition);\r",
          "    float distance = length(direction);            \r",
          "    //float x =   clamp(( Range.y - distance) / Range.x, 0, 1);\r",
          "    \r",
          "    \r",
          "    \r",
          "    float3 offset= float3(0,0,0);\r",
          "    float ratio= distance/Radius;\r",
          "    float converge = 1;\r",
          "    float u =     BiasedValue( ratio, Move.r, Move.g, Move.b, Move.a);\r",
          "    \r",
          "    float3 pU = SplinePosition(u);\r",
          "    float3 pUD= SplinePosition(u+0.001);\r",
          "        //offset = SplinePosition(1-distance/Radius);\r",
          "        //offset = float3(0,1-distance/Radius,0)*10;\r",
          "    float3 uN = normalize(pU-pUD);  // Direction at Normal\r",
          "                \r",
          "    float4x4 transform;\r",
          "    float4x4 rotation;\r",
          "    transform=rotation= float4x4(1,0,0,0, \r",
          "                         0,1,0,0,\r",
          "                         0,0,1,0,\r",
          "                         0,0,0,1);\r",
          "    \r",
          "    bool applyDistortion = ratio < 1 && ratio> 0;\r",
          "    //applyDistortion=false;\r",
          "    \r",
          "    if(applyDistortion ) {\r",
          "        offset = pU-StartPosition;\r",
          "        converge = BiasedValue( ratio, Converge.r, Converge.g, Converge.b, Converge.a);\r",
          "    \r",
          "        float twirl = BiasedValue( ratio, Twirl.r, Twirl.g, Twirl.b, Twirl.a);\r",
          "        \r",
          "    \r",
          "        \r",
          "        //float falloff = Range.y;\r",
          "        //if (falloff == 0) {\r",
          "        //    falloff = 0.00001;\r",
          "        //}\r",
          "        //float x = clamp(- (distance - Range.x)/falloff, 0, 1);\r",
          "        \r",
          "        float influence = 0; //x*x*(3 - 2*x);  // SmoothStep\r",
          "        //float Rotate = 0;\r",
          "    \r",
          "        // Move Face to origin\r",
          "        float4x4 translateToOrigin ={ 1,    0,    0,   -pCenter.x,\r",
          "                                 0,    1,    0,   -pCenter.y,\r",
          "                                 0,    0,    1,   -pCenter.z,\r",
          "                                 0,    0,    0,   1};\r",
          "                                 \r",
          "        transform = translateToOrigin;\r",
          "    \r",
          "        // Rotate face\r",
          "        float rotateValue = BiasedValue( ratio, Rotate.r, Rotate.g, Rotate.b, Rotate.a) * getNoise(seed, 213) ; \r",
          "        float angleX= rotateValue * 3.141578 * Rotate/360 * getNoise(13, seed);\r",
          "        float cax= cos(angleX);\r",
          "        float sax= sin(angleX);    \r",
          "        float4x4 rotx = {    1,    0,    0,    0,\r",
          "                             0,    cax, -sax,  0,\r",
          "                             0,    sax,  cax,  0,\r",
          "                             0,    0,    0,    1};\r",
          "        float angleY= rotateValue * 3.141578 * Rotate/360 * getNoise(13423, seed);\r",
          "        float cay= cos(angleY);\r",
          "        float say= sin(angleY);    \r",
          "        float4x4 roty = {    cay,  0,    say,  0,\r",
          "                             0,    1,    0,    0,\r",
          "                            -say,  0,    cay,  0,\r",
          "                             0,    0,    0,    1};\r",
          "        float4x4 rotation = mul(rotx,roty);                         \r",
          "        transform = mul( rotation, transform);\r",
          "        \r",
          "        \r",
          "        // Translate to distance for twirl rotation\r",
          "        float scatter = BiasedValue( ratio, Scatter.r, Scatter.g, Scatter.b, Scatter.a) * getNoise(seed, 23) ; \r",
          "        \r",
          "        float4x4 translateTwirl={  1,    0,    0,   direction.x,\r",
          "                                 0,    1,    0,    direction.y,\r",
          "                                 0,    0,    1,    direction.z,\r",
          "                                 0,    0,    0,   1};\r",
          "        transform = mul( translateTwirl, transform);\r",
          "        \r",
          "        // Twirl as rotation around uN\r",
          "        float ca = cos(twirl);\r",
          "        float sa = sin(twirl);\r",
          "    \r",
          "        float x= uN.x;\r",
          "        float y= uN.y;\r",
          "        float z= uN.z;\r",
          "        \r",
          "        float4x4 rotateAroundUNormal= {\r",
          "            ca+x*x*(1-ca),      x*y*(1-ca)-z*sa,    x*z*(1-ca)+y*sa,    0,\r",
          "            y*x*(1-ca)+z*sa,    ca+y*y*(1-ca),      y*z*(1-ca)+x*sa,    0,\r",
          "            z*x*(1-ca)-y*sa,    z*y*(1-ca)+x*sa,    ca+z*z*(1-ca),      0,\r",
          "            0,                  0,                  0,                  1        \r",
          "        };\r",
          "        transform = mul( rotateAroundUNormal, transform);\r",
          "    \r",
          "        // Translate back\r",
          "        float4x4 translateBack={  1,    0,    0,   pCenter.x-direction.x*(1+converge+scatter),\r",
          "                                 0,    1,    0,    pCenter.y-direction.y*(1+converge+scatter),\r",
          "                                 0,    0,    1,    pCenter.z-direction.z*(1+converge+scatter),\r",
          "                                 0,    0,    0,   1};\r",
          "        transform = mul( translateBack, transform);\r",
          "    \r",
          "    \r",
          "        //float3 offset+=  normalize(direction) * influence * ( Push + getNoise(2342, seed) * Scatter );\r",
          "        // Move to u\r",
          "        float4x4 translateOffset={ 1,    0,    0,   offset.x,\r",
          "                                   0,    1,    0,   offset.y,\r",
          "                                   0,    0,    1,   offset.z, \r",
          "                                   0,    0,    0,   1};\r",
          "    \r",
          "        transform = mul( translateOffset, transform);\r",
          "    }\r",
          "\r",
          "    \r",
          "    \r",
          "\r",
          "    for (int i = 0; i < 3; i++)\r",
          "\t{\r",
          "        Vertex vertex = input[i];\r",
          "        float4 p = vertex.pos;\r",
          "        //p.xyz+= Translate;\r",
          "        \r",
          "        if(applyDistortion) \r",
          "        {\r",
          "            float shrink = clamp( BiasedValue( ratio, Shrink.r, Shrink.g, Shrink.b, Shrink.a),  -1000, ShrinkLimit);            \r",
          "            \r",
          "            p.xyz+= (pCenter-p)*shrink;\r",
          "            \r",
          "            \r",
          "            float pushStrength = BiasedValue( ratio, Distort.r, Distort.g, Distort.b, Distort.a) * getNoise(seed, i) ; \r",
          "            p.xyz+= direction * pushStrength  ; \r",
          "        }\r",
          "    \r",
          "        p = mul(transform, p);        \r",
          "        \r",
          "        vertex.pos.xyz = p.xyz;\r",
          "        vertex.normal = mul( float4(vertex.normal.xyz,1), transform);\r",
          "        \r",
          "        outputStream.Append(vertex);\r",
          "    }\r",
          "    outputStream.RestartStrip();\r",
          "};\r",
          "\r",
          "\r",
          "GeometryShader pGSComp = CompileShader(gs_5_0, GeometryMain());\r",
          "GeometryShader pGSwSO = ConstructGSWithSO(pGSComp, \"POSITION; NORMAL.xyz; COLOR; TEXCOORD0.xy; TANGENT0.xyz; BINORMAL0.xyz\", NULL, NULL, NULL, 0);\r",
          "\r",
          "\r",
          "technique11 Render\r",
          "{\r",
          "    pass \r",
          "    {\r",
          "        SetVertexShader(CompileShader(vs_5_0, VertexMain()));\r",
          "        SetGeometryShader(pGSwSO);\r",
          "        SetPixelShader(NULL);\r",
          "    }\r",
          "}\r",
          "\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Scene",
      "MetaInstanceID": "223f31c1-627b-4f52-9226-0445db1fd112",
      "DefaultValue": {
        "Type": "Scene",
        "Value": "Framefield.Core.Scene"
      },
      "MetaID": "79122951-7bc4-4c68-b085-866eab828248",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "StartPosition.X",
      "MetaInstanceID": "f54d5f8d-b6fc-4c14-924e-ce02774ad6ee",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "StartPosition.Y",
      "MetaInstanceID": "36311fd2-4505-4fc1-a915-1452880b0696",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "StartPosition.Z",
      "MetaInstanceID": "8c03470f-e890-4344-b228-030c0463066e",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "StartTangent.X",
      "MetaInstanceID": "b4ef670f-b870-4c5d-9125-8212807a6a4e",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "StartTangent.Y",
      "MetaInstanceID": "c29b2dc1-0ef4-4028-a07a-76dce779602f",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "StartTangent.Z",
      "MetaInstanceID": "40ed10c4-2023-4263-8704-dbfac079587a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "EndPosition.X",
      "MetaInstanceID": "52e96007-bbe2-415e-bc52-2c5a4a7802df",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "EndPosition.Y",
      "MetaInstanceID": "81bd8843-7b3f-46aa-8052-60c6588bc749",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "EndPosition.Z",
      "MetaInstanceID": "2129b858-086b-448f-9686-edd5070aaafa",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "EndTangent.X",
      "MetaInstanceID": "d67642c8-a375-4308-a590-85a8e50888de",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "EndTangent.Y",
      "MetaInstanceID": "aaaf69c7-70ee-49b2-b285-6b044d4a0ab6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "EndTangent.Z",
      "MetaInstanceID": "71eb9768-fdce-45d1-9ad0-fac171a4f8d9",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Radius",
      "MetaInstanceID": "23801d12-d029-43be-8a40-ceb7b62d878a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Move.CenterValue",
      "MetaInstanceID": "0ae47d70-2bc9-48fd-a8c1-92c6c6555152",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Move.CenterBias",
      "MetaInstanceID": "f98ae10c-78a8-4cfe-a376-f708b26e4dd4",
      "DefaultValue": {
        "Type": "Float",
        "Value": "4"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Move.EdgeValue",
      "MetaInstanceID": "1540f4f1-d5f0-4fc1-b1bb-a9682ad3d1a3",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Move.EdgeBias",
      "MetaInstanceID": "db893507-679b-44c3-aecc-7947ed15ac02",
      "DefaultValue": {
        "Type": "Float",
        "Value": "4"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Converge.CenterValue",
      "MetaInstanceID": "156c051e-b1a3-4969-9741-ef297bf16b8d",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Converge.CenterBias",
      "MetaInstanceID": "d87a8407-205d-4e55-93ee-6ee8f7e13a6c",
      "DefaultValue": {
        "Type": "Float",
        "Value": "4"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Converge.EdgeValue",
      "MetaInstanceID": "2d222554-e407-4ad6-8700-38f0068a6025",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Converge.EdgeBias",
      "MetaInstanceID": "d11ff7ce-2359-4768-9208-f8e4a5f2f320",
      "DefaultValue": {
        "Type": "Float",
        "Value": "4"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Twirl.CenterValue",
      "MetaInstanceID": "7a0dd9d6-e002-477a-a98f-18ab79b08e62",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Twirl.CenterBias",
      "MetaInstanceID": "44b3eb27-057d-4af4-b64a-416e1766feec",
      "DefaultValue": {
        "Type": "Float",
        "Value": "4"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Twirl.EdgeValue",
      "MetaInstanceID": "5a0d0e5c-f22f-4286-8980-2c816d4fa9e5",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Twirl.EdgeBias",
      "MetaInstanceID": "36edbcd7-6eaa-4566-ae49-99605f112861",
      "DefaultValue": {
        "Type": "Float",
        "Value": "8"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Shrink.CenterValue",
      "MetaInstanceID": "f13a46c5-e145-4fba-9be7-83a1b47bda2e",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Shrink.CenterBias",
      "MetaInstanceID": "e3c9681f-33c4-4bc3-85f1-7e067ac546fc",
      "DefaultValue": {
        "Type": "Float",
        "Value": "4"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Shrink.EdgeValue",
      "MetaInstanceID": "666353fa-9a67-4d87-9b1b-67e39d6783a3",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Shrink.EdgeBias",
      "MetaInstanceID": "e02c3653-60eb-44e6-bf28-cd8b68e04fe2",
      "DefaultValue": {
        "Type": "Float",
        "Value": "8"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Scatter.CenterValue",
      "MetaInstanceID": "8384442f-1a2b-4d7b-a12a-9087dc2f8f32",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Scatter.CenterBias",
      "MetaInstanceID": "02a40a72-01e8-495b-ac34-0722909e1054",
      "DefaultValue": {
        "Type": "Float",
        "Value": "4"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Scatter.EdgeValue",
      "MetaInstanceID": "89b83adb-1e79-4d04-9814-bef344a55b2f",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Scatter.EdgeBias",
      "MetaInstanceID": "282d348f-7ec7-41b0-a69d-7add3378a1d6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "8"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Distort.CenterValue",
      "MetaInstanceID": "6c684ac5-741b-4e17-b667-bee63e99c08f",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Distort.CenterBias",
      "MetaInstanceID": "8e45d83d-b5bf-4d7e-96b7-d42b51794d12",
      "DefaultValue": {
        "Type": "Float",
        "Value": "4"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Distort.EdgeValue",
      "MetaInstanceID": "444327f3-a94a-4947-86ca-721feb35dbf0",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Distort.EdgeBias",
      "MetaInstanceID": "ba7e3bcd-dbef-429f-bc3b-be5aa696c06b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "8"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Rotate.CenterValue",
      "MetaInstanceID": "3e0babe0-a3ae-408a-a501-2981285994e8",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Rotate.CenterBias",
      "MetaInstanceID": "616f063e-7486-495f-b93f-a2be8307b03f",
      "DefaultValue": {
        "Type": "Float",
        "Value": "4"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Rotate.EdgeValue",
      "MetaInstanceID": "c6955897-4a18-43df-9a61-12de841a8e7a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Rotate.EdgeBias",
      "MetaInstanceID": "ccdf428a-4ad0-440c-a740-ed7f5f0656ad",
      "DefaultValue": {
        "Type": "Float",
        "Value": "8"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ShrinkLimit",
      "MetaInstanceID": "06c9e4f9-894a-4b64-bb48-1cfc6854d4ce",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": [
        {
          "Name": "AllowOverrun",
          "Value": "10000"
        },
        {
          "Name": "ClampAtZero",
          "Value": "1"
        }
      ]
    }
  ],
  "Outputs": [
    {
      "Name": "Scene",
      "MetaInstanceID": "2e9b6f05-36cf-48a0-a1c1-af5918162ae4",
      "MetaID": "79122951-7bc4-4c68-b085-866eab828248"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "c1b22d80-2094-4521-adb7-22f126651d90",
      "MetaID": "fb383c71-8b29-4fb8-8edc-1a30f78e89ab",
      "Name": "TornadoScatterFunc",
      "Version": "c1710cfb-ad0b-4d08-aafc-8f13d5253cf9",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "using Framefield.Core.OperatorPartTraits;",
        "using Framefield.Core.Rendering;",
        "using Buffer = SharpDX.Direct3D11.Buffer;",
        "using SharpDX.Direct3D;",
        "",
        "namespace Framefield.Core.IDfb383c71_8b29_4fb8_8edc_1a30f78e89ab",
        "{",
        "    public class Class_TornadoScatter : FXSourceCodeFunction, IFXSceneSourceCode, IMeshSupplier",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Scene = 1,",
        "            StartPositionX = 2,",
        "            StartPositionY = 3,",
        "            StartPositionZ = 4,",
        "            StartTangentX = 5,",
        "            StartTangentY = 6,",
        "            StartTangentZ = 7,",
        "            EndPositionX = 8,",
        "            EndPositionY = 9,",
        "            EndPositionZ = 10,",
        "            EndTangentX = 11,",
        "            EndTangentY = 12,",
        "            EndTangentZ = 13,",
        "            Radius = 14,",
        "            MoveCenterValue = 15,",
        "            MoveCenterBias = 16,",
        "            MoveEdgeValue = 17,",
        "            MoveEdgeBias = 18,",
        "            ConvergeCenterValue = 19,",
        "            ConvergeCenterBias = 20,",
        "            ConvergeEdgeValue = 21,",
        "            ConvergeEdgeBias = 22,",
        "            TwirlCenterValue = 23,",
        "            TwirlCenterBias = 24,",
        "            TwirlEdgeValue = 25,",
        "            TwirlEdgeBias = 26,",
        "            ShrinkCenterValue = 27,",
        "            ShrinkCenterBias = 28,",
        "            ShrinkEdgeValue = 29,",
        "            ShrinkEdgeBias = 30,",
        "            ScatterCenterValue = 31,",
        "            ScatterCenterBias = 32,",
        "            ScatterEdgeValue = 33,",
        "            ScatterEdgeBias = 34,",
        "            DistortCenterValue = 35,",
        "            DistortCenterBias = 36,",
        "            DistortEdgeValue = 37,",
        "            DistortEdgeBias = 38,",
        "            RotateCenterValue = 39,",
        "            RotateCenterBias = 40,",
        "            RotateEdgeValue = 41,",
        "            RotateEdgeBias = 42,",
        "            ShrinkLimit = 43",
        "        }",
        "        //<<< _inputids",
        "",
        "        public Class_TornadoScatter()",
        "        {",
        "            _meshCollector = new MeshCollector(this);",
        "        }",
        "",
        "        public override void Dispose() ",
        "        {",
        "            Utilities.DisposeObj(ref _mesh);",
        "            base.Dispose();",
        "        }",
        "",
        "        public void AddMeshesTo(ICollection<Mesh> meshes)",
        "        {",
        "            UpdateMesh(new OperatorPartContext(), OperatorPart.Connections);",
        "            if (_mesh != null)",
        "                meshes.Add(_mesh);",
        "        }",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx)",
        "        {",
        "            try",
        "            {",
        "                UpdateMesh(context, inputs);",
        "",
        "                if (_mesh.Vertices != null)",
        "                {",
        "                    // render stream output to screen or whatever target is set",
        "                    context.Renderer.SetupEffect(context);",
        "                    context.Renderer.Render(_mesh, context);",
        "                }",
        "            }",
        "            catch (Exception exception)",
        "            {",
        "                Logger.Error(this, \"Load Effect error: {0}\", exception.Message);",
        "            }",
        "",
        "            return context;",
        "        }",
        "",
        "        bool _firstEval = true;",
        "        private void UpdateMesh(OperatorPartContext context, List<OperatorPart> inputs)",
        "        {",
        "            if (_firstEval)",
        "            {",
        "                for (int i = 0; i < NumCodes(); ++i)",
        "                    Compile(i);",
        "                _firstEval = false;",
        "                Changed = true;",
        "            }",
        "",
        "            if (!Changed && _mesh.Vertices != null)",
        "                return;",
        "",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Scene = inputs[(int)InputId.Scene];",
        "            var StartPositionX = inputs[(int)InputId.StartPositionX].Eval(context).Value;",
        "            var StartPositionY = inputs[(int)InputId.StartPositionY].Eval(context).Value;",
        "            var StartPositionZ = inputs[(int)InputId.StartPositionZ].Eval(context).Value;",
        "            var StartPosition = new Vector3(StartPositionX, StartPositionY, StartPositionZ);",
        "            var StartTangentX = inputs[(int)InputId.StartTangentX].Eval(context).Value;",
        "            var StartTangentY = inputs[(int)InputId.StartTangentY].Eval(context).Value;",
        "            var StartTangentZ = inputs[(int)InputId.StartTangentZ].Eval(context).Value;",
        "            var StartTangent = new Vector3(StartTangentX, StartTangentY, StartTangentZ);",
        "            var EndPositionX = inputs[(int)InputId.EndPositionX].Eval(context).Value;",
        "            var EndPositionY = inputs[(int)InputId.EndPositionY].Eval(context).Value;",
        "            var EndPositionZ = inputs[(int)InputId.EndPositionZ].Eval(context).Value;",
        "            var EndPosition = new Vector3(EndPositionX, EndPositionY, EndPositionZ);",
        "            var EndTangentX = inputs[(int)InputId.EndTangentX].Eval(context).Value;",
        "            var EndTangentY = inputs[(int)InputId.EndTangentY].Eval(context).Value;",
        "            var EndTangentZ = inputs[(int)InputId.EndTangentZ].Eval(context).Value;",
        "            var EndTangent = new Vector3(EndTangentX, EndTangentY, EndTangentZ);",
        "            var Radius = inputs[(int)InputId.Radius].Eval(context).Value;",
        "            var MoveCenterValue = inputs[(int)InputId.MoveCenterValue].Eval(context).Value;",
        "            var MoveCenterBias = inputs[(int)InputId.MoveCenterBias].Eval(context).Value;",
        "            var MoveEdgeValue = inputs[(int)InputId.MoveEdgeValue].Eval(context).Value;",
        "            var MoveEdgeBias = inputs[(int)InputId.MoveEdgeBias].Eval(context).Value;",
        "            var Move = new Vector4(MoveCenterValue, MoveCenterBias, MoveEdgeValue, MoveEdgeBias);",
        "            var ConvergeCenterValue = inputs[(int)InputId.ConvergeCenterValue].Eval(context).Value;",
        "            var ConvergeCenterBias = inputs[(int)InputId.ConvergeCenterBias].Eval(context).Value;",
        "            var ConvergeEdgeValue = inputs[(int)InputId.ConvergeEdgeValue].Eval(context).Value;",
        "            var ConvergeEdgeBias = inputs[(int)InputId.ConvergeEdgeBias].Eval(context).Value;",
        "            var Converge = new Vector4(ConvergeCenterValue, ConvergeCenterBias, ConvergeEdgeValue, ConvergeEdgeBias);",
        "            var TwirlCenterValue = inputs[(int)InputId.TwirlCenterValue].Eval(context).Value;",
        "            var TwirlCenterBias = inputs[(int)InputId.TwirlCenterBias].Eval(context).Value;",
        "            var TwirlEdgeValue = inputs[(int)InputId.TwirlEdgeValue].Eval(context).Value;",
        "            var TwirlEdgeBias = inputs[(int)InputId.TwirlEdgeBias].Eval(context).Value;",
        "            var Twirl = new Vector4(TwirlCenterValue, TwirlCenterBias, TwirlEdgeValue, TwirlEdgeBias);",
        "            var ShrinkCenterValue = inputs[(int)InputId.ShrinkCenterValue].Eval(context).Value;",
        "            var ShrinkCenterBias = inputs[(int)InputId.ShrinkCenterBias].Eval(context).Value;",
        "            var ShrinkEdgeValue = inputs[(int)InputId.ShrinkEdgeValue].Eval(context).Value;",
        "            var ShrinkEdgeBias = inputs[(int)InputId.ShrinkEdgeBias].Eval(context).Value;",
        "            var Shrink = new Vector4(ShrinkCenterValue, ShrinkCenterBias, ShrinkEdgeValue, ShrinkEdgeBias);",
        "            var ScatterCenterValue = inputs[(int)InputId.ScatterCenterValue].Eval(context).Value;",
        "            var ScatterCenterBias = inputs[(int)InputId.ScatterCenterBias].Eval(context).Value;",
        "            var ScatterEdgeValue = inputs[(int)InputId.ScatterEdgeValue].Eval(context).Value;",
        "            var ScatterEdgeBias = inputs[(int)InputId.ScatterEdgeBias].Eval(context).Value;",
        "            var Scatter = new Vector4(ScatterCenterValue, ScatterCenterBias, ScatterEdgeValue, ScatterEdgeBias);",
        "            var DistortCenterValue = inputs[(int)InputId.DistortCenterValue].Eval(context).Value;",
        "            var DistortCenterBias = inputs[(int)InputId.DistortCenterBias].Eval(context).Value;",
        "            var DistortEdgeValue = inputs[(int)InputId.DistortEdgeValue].Eval(context).Value;",
        "            var DistortEdgeBias = inputs[(int)InputId.DistortEdgeBias].Eval(context).Value;",
        "            var Distort = new Vector4(DistortCenterValue, DistortCenterBias, DistortEdgeValue, DistortEdgeBias);",
        "            var RotateCenterValue = inputs[(int)InputId.RotateCenterValue].Eval(context).Value;",
        "            var RotateCenterBias = inputs[(int)InputId.RotateCenterBias].Eval(context).Value;",
        "            var RotateEdgeValue = inputs[(int)InputId.RotateEdgeValue].Eval(context).Value;",
        "            var RotateEdgeBias = inputs[(int)InputId.RotateEdgeBias].Eval(context).Value;",
        "            var Rotate = new Vector4(RotateCenterValue, RotateCenterBias, RotateEdgeValue, RotateEdgeBias);",
        "            var ShrinkLimit = (int) inputs[(int)InputId.ShrinkLimit].Eval(context).Value;",
        "            //<<< _params",
        "",
        "            if (Scene.Func.Changed || _mesh.Vertices == null)",
        "            {",
        "                //Logger.Info(this, \"collect meshes\");",
        "                _meshCollector.Collect(Scene);",
        "                Scene.Func.Changed = false;",
        "            }",
        "",
        "            var inputMesh = _meshCollector.FirstMeshOrDefault;",
        "            if (inputMesh == null)",
        "                return;",
        "",
        "            _mesh.AttributesSize = inputMesh.AttributesSize;",
        "            _mesh.NumTriangles = inputMesh.NumTriangles;",
        "            _mesh.InputElements = inputMesh.InputElements;",
        "            if (_mesh.Vertices == null || _mesh.Vertices.Description.SizeInBytes != inputMesh.Vertices.Description.SizeInBytes)",
        "            {",
        "                if (_mesh.Vertices != null)",
        "                    _mesh.Vertices.Dispose();",
        "",
        "                _mesh.Vertices = new Buffer(D3DDevice.Device, new BufferDescription()",
        "                                                                    {",
        "                                                                        BindFlags = BindFlags.StreamOutput | BindFlags.VertexBuffer,",
        "                                                                        CpuAccessFlags = CpuAccessFlags.None,",
        "                                                                        OptionFlags = ResourceOptionFlags.None,",
        "                                                                        SizeInBytes = _mesh.NumTriangles*inputMesh.AttributesSize*3,",
        "                                                                        Usage = ResourceUsage.Default",
        "                                                                    });",
        "            }",
        "",
        "            _effect.GetVariableByName(\"Radius\").AsScalar().Set(Radius);",
        "            _effect.GetVariableByName(\"StartPosition\").AsVector().Set(new Vector3(StartPositionX, StartPositionY, StartPositionZ));",
        "            _effect.GetVariableByName(\"StartTangent\").AsVector().Set(new Vector3(StartTangentX, StartTangentY, StartTangentZ));",
        "            _effect.GetVariableByName(\"EndPosition\").AsVector().Set(new Vector3(EndPositionX, EndPositionY, EndPositionZ));",
        "            _effect.GetVariableByName(\"EndTangent\").AsVector().Set(new Vector3(EndTangentX, EndTangentY, EndTangentZ));",
        "",
        "            _effect.GetVariableByName(\"Move\").AsVector().Set(new Vector4(MoveCenterValue, MoveCenterBias, MoveEdgeValue, MoveEdgeBias));",
        "            _effect.GetVariableByName(\"Converge\").AsVector().Set(new Vector4(ConvergeCenterValue, ConvergeCenterBias, ConvergeEdgeValue, ConvergeEdgeBias));",
        "            _effect.GetVariableByName(\"Twirl\").AsVector().Set(new Vector4(TwirlCenterValue, TwirlCenterBias, TwirlEdgeValue, TwirlEdgeBias));",
        "            ",
        "            ",
        "            _effect.GetVariableByName(\"Shrink\").AsVector().Set(new Vector4(ShrinkCenterValue, ShrinkCenterBias, ShrinkEdgeValue, ShrinkEdgeBias));",
        "            _effect.GetVariableByName(\"Scatter\").AsVector().Set(new Vector4(ScatterCenterValue, ScatterCenterBias, ScatterEdgeValue, ScatterEdgeBias));",
        "            _effect.GetVariableByName(\"Distort\").AsVector().Set(new Vector4(DistortCenterValue, DistortCenterBias, DistortEdgeValue, DistortEdgeBias));",
        "            _effect.GetVariableByName(\"Rotate\").AsVector().Set(new Vector4(RotateCenterValue, RotateCenterBias, RotateEdgeValue, RotateEdgeBias));",
        "            _effect.GetVariableByName(\"ShrinkLimit\").AsScalar().Set(ShrinkLimit);",
        "            ",
        "            //_effect.GetVariableByName(\"Translate\").AsVector().Set(new Vector3(TranslateX, TranslateY, TranslateZ));",
        "            //_effect.GetVariableByName(\"Range\").AsVector().Set(new Vector2(RangeSize, RangeFallOff));",
        "            //_effect.GetVariableByName(\"Push\").AsScalar().Set(Push);",
        "            //_effect.GetVariableByName(\"Shrink\").AsScalar().Set(Shrink);",
        "            //_effect.GetVariableByName(\"Scatter\").AsScalar().Set(Scatter);",
        "            //_effect.GetVariableByName(\"Distort\").AsScalar().Set(Distort);",
        "            //_effect.GetVariableByName(\"Rotate\").AsScalar().Set(Rotate);",
        "",
        "            context.D3DDevice.ImmediateContext.StreamOutput.SetTargets(new [] { new StreamOutputBufferBinding(_mesh.Vertices, 0) });",
        "            context.D3DDevice.ImmediateContext.OutputMerger.DepthStencilState = new DepthStencilState(context.D3DDevice,",
        "                                                                                                        new DepthStencilStateDescription()",
        "                                                                                                            {",
        "                                                                                                                IsDepthEnabled = false,",
        "                                                                                                                IsStencilEnabled = false",
        "                                                                                                            });",
        "            context.D3DDevice.ImmediateContext.InputAssembler.InputLayout = context.InputLayout;",
        "            context.D3DDevice.ImmediateContext.InputAssembler.PrimitiveTopology = PrimitiveTopology.TriangleList;",
        "            context.D3DDevice.ImmediateContext.InputAssembler.SetVertexBuffers(0, new VertexBufferBinding(inputMesh.Vertices, inputMesh.AttributesSize, 0));",
        "            var technique = _effect.GetTechniqueByIndex(0);",
        "            technique.GetPassByIndex(0).Apply(context.D3DDevice.ImmediateContext);",
        "            context.D3DDevice.ImmediateContext.Draw(_mesh.NumTriangles*3, 0);",
        "            context.D3DDevice.ImmediateContext.StreamOutput.SetTargets(new [] { new StreamOutputBufferBinding(null, 0) });",
        "",
        "            Changed = false;",
        "        }",
        "",
        "        private Mesh _mesh = new Mesh();",
        "        private MeshCollector _meshCollector;",
        "    }",
        "}",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c1b22d80-2094-4521-adb7-22f126651d90",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "2e9b6f05-36cf-48a0-a1c1-af5918162ae4"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "66af8efa-6efb-4d32-bf25-afd426bcebf1",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "223f31c1-627b-4f52-9226-0445db1fd112",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f54d5f8d-b6fc-4c14-924e-ce02774ad6ee",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "36311fd2-4505-4fc1-a915-1452880b0696",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8c03470f-e890-4344-b228-030c0463066e",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b4ef670f-b870-4c5d-9125-8212807a6a4e",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c29b2dc1-0ef4-4028-a07a-76dce779602f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "40ed10c4-2023-4263-8704-dbfac079587a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "52e96007-bbe2-415e-bc52-2c5a4a7802df",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "81bd8843-7b3f-46aa-8052-60c6588bc749",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2129b858-086b-448f-9686-edd5070aaafa",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d67642c8-a375-4308-a590-85a8e50888de",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "aaaf69c7-70ee-49b2-b285-6b044d4a0ab6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "71eb9768-fdce-45d1-9ad0-fac171a4f8d9",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "23801d12-d029-43be-8a40-ceb7b62d878a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0ae47d70-2bc9-48fd-a8c1-92c6c6555152",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f98ae10c-78a8-4cfe-a376-f708b26e4dd4",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "1540f4f1-d5f0-4fc1-b1bb-a9682ad3d1a3",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "db893507-679b-44c3-aecc-7947ed15ac02",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "156c051e-b1a3-4969-9741-ef297bf16b8d",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d87a8407-205d-4e55-93ee-6ee8f7e13a6c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2d222554-e407-4ad6-8700-38f0068a6025",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d11ff7ce-2359-4768-9208-f8e4a5f2f320",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "7a0dd9d6-e002-477a-a98f-18ab79b08e62",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "44b3eb27-057d-4af4-b64a-416e1766feec",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5a0d0e5c-f22f-4286-8980-2c816d4fa9e5",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "36edbcd7-6eaa-4566-ae49-99605f112861",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f13a46c5-e145-4fba-9be7-83a1b47bda2e",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e3c9681f-33c4-4bc3-85f1-7e067ac546fc",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "666353fa-9a67-4d87-9b1b-67e39d6783a3",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e02c3653-60eb-44e6-bf28-cd8b68e04fe2",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8384442f-1a2b-4d7b-a12a-9087dc2f8f32",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "02a40a72-01e8-495b-ac34-0722909e1054",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "89b83adb-1e79-4d04-9814-bef344a55b2f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "282d348f-7ec7-41b0-a69d-7add3378a1d6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "6c684ac5-741b-4e17-b667-bee63e99c08f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8e45d83d-b5bf-4d7e-96b7-d42b51794d12",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "444327f3-a94a-4947-86ca-721feb35dbf0",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ba7e3bcd-dbef-429f-bc3b-be5aa696c06b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "3e0babe0-a3ae-408a-a501-2981285994e8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "616f063e-7486-495f-b93f-a2be8307b03f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c6955897-4a18-43df-9a61-12de841a8e7a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ccdf428a-4ad0-440c-a740-ed7f5f0656ad",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "06c9e4f9-894a-4b64-bb48-1cfc6854d4ce",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c1b22d80-2094-4521-adb7-22f126651d90"
    }
  ]
}