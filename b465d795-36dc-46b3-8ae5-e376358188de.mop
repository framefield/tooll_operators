{
  "Name": "DepthToColor",
  "_id": "b465d795-36dc-46b3-8ae5-e376358188de",
  "Namespace": "lib.image.adjust",
  "Description": "converts depth buffer into grayscale color buffer",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "f606d0a3-f1c5-4291-ae1d-37f4ba02f7ba",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "Texture2D Image;",
          "float2 Range;",
          "//<<< _parameters\r",
          "Texture2D txDepth;\r",
          " \r",
          "//>>> _setup\r",
          "SamplerState samLinear",
          "{",
          "    Filter = MIN_MAG_MIP_LINEAR;",
          "    AddressU = Clamp;",
          "    AddressV = Clamp;",
          "};",
          "//<<< _setup\r",
          "\r",
          "//>>> _declarations\r",
          "struct VS_IN",
          "{",
          "    float4 pos : POSITION;",
          "    float2 texCoord : TEXCOORD;",
          "};",
          "",
          "struct PS_IN",
          "{",
          "    float4 pos : SV_POSITION;",
          "    float2 texCoord: TEXCOORD0;",
          "};",
          "//<<< _declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float depth = txDepth.Sample(samLinear, input.texCoord).r;\r",
          "    float c = (depth - Range.x)/(Range.y - Range.x);\r",
          "    return float4(c, c, c, 1);\r",
          "}\r",
          "//<<< PS\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Image",
      "MetaInstanceID": "06071ce9-24b2-484c-920b-9065a7378122",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Range.Min",
      "MetaInstanceID": "fe7d6a43-7550-4408-89f0-aac3dde53803",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Range.Max",
      "MetaInstanceID": "b44cd37a-8454-480a-a107-c41b43d634a7",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "3ccf64f2-825d-4d07-bfb7-6d0166a26120",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "6afd393e-b9f6-433a-add1-cda4b26d00dc",
      "MetaID": "d44d9bdd-09a4-4c73-8ad2-9a8e37fb4933",
      "Name": "DepthToColorFunc",
      "Version": "3801a318-6ec9-47de-ba60-36eb5b9eec9f",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "using SharpDX.Direct3D;",
        "using SharpDX.DXGI;",
        "",
        "namespace Framefield.Core.IDd44d9bdd_09a4_4c73_8ad2_9a8e37fb4933",
        "{",
        "    public class Class_DepthToColor : FXImageFunction",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Image = 1,",
        "            RangeMin = 2,",
        "            RangeMax = 3",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Image = inputs[(int)InputId.Image].Eval(context).Image; // Needs to be checked for null!",
        "            var RangeMin = inputs[(int)InputId.RangeMin].Eval(context).Value;",
        "            var RangeMax = inputs[(int)InputId.RangeMax].Eval(context).Value;",
        "            var Range = new Vector2(RangeMin, RangeMax);",
        "            //<<< _params",
        "",
        "            if (context.DepthImage == null)",
        "                return context;",
        "",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 1));",
        "",
        "                var shaderDesc = new ShaderResourceViewDescription();",
        "                shaderDesc.Format = Format.R32_Float;",
        "                shaderDesc.Dimension = ShaderResourceViewDimension.Texture2D;",
        "                shaderDesc.Texture2D.MipLevels = 1;",
        "                using (var depthTexture = new ShaderResourceView(context.D3DDevice, context.DepthImage, shaderDesc)) {",
        "                    _effect.GetVariableByName(\"txDepth\").AsShaderResource().SetResource(depthTexture); ",
        "",
        "                //>>> _setup",
        "                using (var ImageView = new ShaderResourceView(context.D3DDevice, Image))",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Image\").AsShaderResource().SetResource(ImageView);",
        "                    _effect.GetVariableByName(\"Range\").AsVector().Set(new Vector2(RangeMin, RangeMax));",
        "                //<<< _setup",
        "",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "                }",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "6afd393e-b9f6-433a-add1-cda4b26d00dc",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "3ccf64f2-825d-4d07-bfb7-6d0166a26120"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f606d0a3-f1c5-4291-ae1d-37f4ba02f7ba",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6afd393e-b9f6-433a-add1-cda4b26d00dc"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "06071ce9-24b2-484c-920b-9065a7378122",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6afd393e-b9f6-433a-add1-cda4b26d00dc"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "fe7d6a43-7550-4408-89f0-aac3dde53803",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6afd393e-b9f6-433a-add1-cda4b26d00dc"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b44cd37a-8454-480a-a107-c41b43d634a7",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6afd393e-b9f6-433a-add1-cda4b26d00dc"
    }
  ]
}