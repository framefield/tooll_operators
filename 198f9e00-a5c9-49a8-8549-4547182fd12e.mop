{
  "Name": "LavaNoise",
  "_id": "198f9e00-a5c9-49a8-8549-4547182fd12e",
  "Namespace": "lib.image.generate",
  "Description": "Simple LavaNoise Shader\r\n\r\nderived from \r\n\r\n//Noise animation - Flow\r\n//by nimitz (stormoid.com) (twitter: @stormoid)\r\n\r\nhttps://www.shadertoy.com/view/MdlXRS\r\n\r\n",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "3c6bbaa0-80ca-486f-8722-e12c52ad4fa0",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "Texture2D NoiseTexture;",
          "float Time;",
          "float Steps;",
          "float4 Color;",
          "float SubSpeed;",
          "float SmearFactor;",
          "float ZStep;",
          "float BStep;",
          "float2 Offset;",
          "float Wobble;",
          "//<<< _parameters\r",
          "\r",
          "SamplerState samLinear",
          "{",
          "    Filter = MIN_MAG_MIP_LINEAR;",
          "    AddressU = Wrap;",
          "    AddressV = Wrap;",
          "};",
          "\r",
          "//>>> _declarations\r",
          "struct VS_IN",
          "{",
          "    float4 pos : POSITION;",
          "    float2 texCoord : TEXCOORD;",
          "};",
          "",
          "struct PS_IN",
          "{",
          "    float4 pos : SV_POSITION;",
          "    float2 texCoord: TEXCOORD0;",
          "};",
          "//<<< _declarations\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "\r",
          "//#define time iGlobalTime*0.1\r",
          "float tau=6.2831853;\r",
          "\r",
          "float2x2 makem2(in float theta){\r",
          "    float c = cos(theta);\r",
          "    float s = sin(theta);\r",
          "    return float2x2(c,-s,s,c);\r",
          "}\r",
          "\r",
          "float noise( in float2 xy ){\r",
          "    return NoiseTexture.Sample(samLinear , xy*.01).r;\r",
          "}\r",
          "\r",
          "float2x2 m2 = float2x2( 0.80,  0.60, -0.60,  0.80 );\r",
          "\r",
          "float grid(float2 p)\r",
          "{\r",
          "\tfloat s = sin(p.x)*cos(p.y);\r",
          "\treturn s;\r",
          "}\r",
          "\r",
          "float flow(in float2 p)\r",
          "{\r",
          "\tfloat z=1;\r",
          "\tfloat rz = 0.;\r",
          "\tfloat2 bp = p;\r",
          "\tfor (float i= 1.;i < Steps;i++ )\r",
          "\t{\r",
          "\t\t//float2 gr = float2( grid(p*3. - Time*2.), grid(p*3. + 4. - Time*2))*0.1;\r",
          "\t\tfloat2 gr = float2( grid(p*3 - SubSpeed * Time),  grid(p*3 + 5 - SubSpeed * Time));\r",
          "\t\t\r",
          "\t\tgr = normalize(gr)*0.2;\r",
          "\t\tgr = mul(gr, makem2( (p.x+p.y)*0.1+Time* Wobble - 0.1) );\r",
          "\t\tp += gr * SmearFactor;\r",
          "\t\t\r",
          "\t\trz+= ( sin(noise(p) * 12.)*0.5+0.5) / z;\r",
          "\t\t\r",
          "\t\tp = lerp(bp,p,.5);\r",
          "\t\tz *= ZStep;\r",
          "\t\tp *= BStep;\r",
          "\t\tp = mul(p,m2);\r",
          "\t\tbp *= 0.01;\r",
          "\t\tbp * mul(bp,m2);\r",
          "\t\tbp += Time*0.2 + Time * Offset;\r",
          "\t}\r",
          "\treturn rz;\t\r",
          "}\r",
          "\r",
          "/*\r",
          "float spiral(float2 p,float scl) \r",
          "{\r",
          "\tfloat r = length(p);\r",
          "\tr = log(r);\r",
          "\tfloat a = atan2(p.y, p.x);\r",
          "\treturn abs(mod(scl*(r-2./scl*a),tau)-1.)*2.;\r",
          "}*/\r",
          "\r",
          "\r",
          "\r",
          "\r",
          "\r",
          "float4 PS(PS_IN input) : SV_Target\r",
          "{\r",
          "\tfloat2 p = input.pos / RenderTargetSize-0.5;\r",
          "\tp.x *= RenderTargetSize.x/RenderTargetSize.y;\r",
          "\tp*= 1.;\r",
          "\tfloat rz = flow(p);\r",
          "\t//p /= exp(mod(time*3.,2.1));\r",
          "\t//p /= exp( Time*3 % 2.1);\r",
          "\t\r",
          "\t//rz *= (6.-spiral(p,3.))*.9;\r",
          "\tfloat3 col = Color / rz;\r",
          "\t\r",
          "\tcol=pow( abs(col) , float3(1.01, 1.01, 1.01));\r",
          "    return float4(col,1);\r",
          "}\r",
          "//<<< PS\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "NoiseTexture",
      "MetaInstanceID": "df730763-0459-4f55-ac13-bc026067205c",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Time",
      "MetaInstanceID": "c35edfe9-c3fe-42f4-bf19-e1c7ca0e4cec",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Steps",
      "MetaInstanceID": "34625e6d-01ca-48b5-8412-6e997f761cf7",
      "DefaultValue": {
        "Type": "Float",
        "Value": "8"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "1",
      "Max": "20",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.R",
      "MetaInstanceID": "ab0daf4a-e810-4a69-9608-647478f22e00",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.8599435"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.G",
      "MetaInstanceID": "2ec35d88-f0b4-4943-a7de-79558e0713fb",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.1322362"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.B",
      "MetaInstanceID": "569eb33c-6904-4dab-9db4-df84d9f2ec42",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.04311636"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.A",
      "MetaInstanceID": "99328185-a44c-4483-8e5f-fdfc0754f03f",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SubSpeed",
      "MetaInstanceID": "1d273aed-f68c-4519-b4eb-ca8b07d419fb",
      "DefaultValue": {
        "Type": "Float",
        "Value": "-0.6"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SmearFactor",
      "MetaInstanceID": "37bbefdb-9299-4bbf-b0f1-a6ee8a2695c7",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ZStep",
      "MetaInstanceID": "5d84c68b-5c14-421f-a96a-69ceb88e8a0f",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1.3"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "BStep",
      "MetaInstanceID": "cbd4b7f1-3b5b-4ed0-afb2-2f90315c3442",
      "DefaultValue": {
        "Type": "Float",
        "Value": "3.4"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Offset.X",
      "MetaInstanceID": "c2b1a588-2b46-4d96-afad-1ca7562261a5",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Offset.Y",
      "MetaInstanceID": "d71b6a56-e51b-4a9d-92ee-7f602dba4df2",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Wobble",
      "MetaInstanceID": "769fc1da-e62e-40f6-be75-6712c250c960",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.9"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "7244d73c-60f0-48f2-859a-7d6c5d6b370e",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "6749261b-7f09-44f3-a783-6083021fdf28",
      "MetaID": "70acdfe1-122f-4cdf-9e61-6a314ebade05",
      "Name": "LavaNoiseFunc",
      "Version": "83a6dbd0-4075-4912-8f02-ff950e310640",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "using System.Runtime.InteropServices;",
        "using Buffer = SharpDX.Direct3D11.Buffer;",
        "",
        "namespace Framefield.Core.ID70acdfe1_122f_4cdf_9e61_6a314ebade05",
        "{",
        "    public class Class_TurbulenceNoise2 : FXImageFunction",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            NoiseTexture = 1,",
        "            Time = 2,",
        "            Steps = 3,",
        "            ColorR = 4,",
        "            ColorG = 5,",
        "            ColorB = 6,",
        "            ColorA = 7,",
        "            SubSpeed = 8,",
        "            SmearFactor = 9,",
        "            ZStep = 10,",
        "            BStep = 11,",
        "            OffsetX = 12,",
        "            OffsetY = 13,",
        "            Wobble = 14",
        "        }",
        "        //<<< _inputids",
        "",
        "        //int[] _permutationTable = new int[512];",
        "        //int _permutaionTableSize = 512 * 4 * 4; // 512 entries * intSize * 16byte alignment padding",
        "        //Buffer _permutationTableConstBuffer;",
        "",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx)",
        "        {",
        "            return PrepareAndEvalOnChange(context, () =>",
        "            {",
        "                //>>> _params",
        "                var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "                var NoiseTexture = inputs[(int)InputId.NoiseTexture].Eval(context).Image; // Needs to be checked for null!",
        "                var Time = inputs[(int)InputId.Time].Eval(context).Value;",
        "                var Steps = inputs[(int)InputId.Steps].Eval(context).Value;",
        "                var ColorR = inputs[(int)InputId.ColorR].Eval(context).Value;",
        "                var ColorG = inputs[(int)InputId.ColorG].Eval(context).Value;",
        "                var ColorB = inputs[(int)InputId.ColorB].Eval(context).Value;",
        "                var ColorA = inputs[(int)InputId.ColorA].Eval(context).Value;",
        "                var Color = new Color4(ColorR, ColorG, ColorB, ColorA);",
        "                var SubSpeed = inputs[(int)InputId.SubSpeed].Eval(context).Value;",
        "                var SmearFactor = inputs[(int)InputId.SmearFactor].Eval(context).Value;",
        "                var ZStep = inputs[(int)InputId.ZStep].Eval(context).Value;",
        "                var BStep = inputs[(int)InputId.BStep].Eval(context).Value;",
        "                var OffsetX = inputs[(int)InputId.OffsetX].Eval(context).Value;",
        "                var OffsetY = inputs[(int)InputId.OffsetY].Eval(context).Value;",
        "                var Offset = new Vector2(OffsetX, OffsetY);",
        "                var Wobble = inputs[(int)InputId.Wobble].Eval(context).Value;",
        "                //<<< _params",
        "",
        "                if(NoiseTexture == null)",
        "                    return;",
        "                    ",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));             ",
        "",
        "                //>>> _setup",
        "                using (var NoiseTextureView = new ShaderResourceView(context.D3DDevice, NoiseTexture))",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"NoiseTexture\").AsShaderResource().SetResource(NoiseTextureView);",
        "                    _effect.GetVariableByName(\"Time\").AsScalar().Set(Time);",
        "                    _effect.GetVariableByName(\"Steps\").AsScalar().Set(Steps);",
        "                    _effect.GetVariableByName(\"Color\").AsVector().Set(new Vector4(ColorR, ColorG, ColorB, ColorA));",
        "                    _effect.GetVariableByName(\"SubSpeed\").AsScalar().Set(SubSpeed);",
        "                    _effect.GetVariableByName(\"SmearFactor\").AsScalar().Set(SmearFactor);",
        "                    _effect.GetVariableByName(\"ZStep\").AsScalar().Set(ZStep);",
        "                    _effect.GetVariableByName(\"BStep\").AsScalar().Set(BStep);",
        "                    _effect.GetVariableByName(\"Offset\").AsVector().Set(new Vector2(OffsetX, OffsetY));",
        "                    _effect.GetVariableByName(\"Wobble\").AsScalar().Set(Wobble);",
        "                //<<< _setup",
        "",
        "                    Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "6749261b-7f09-44f3-a783-6083021fdf28",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "7244d73c-60f0-48f2-859a-7d6c5d6b370e"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "3c6bbaa0-80ca-486f-8722-e12c52ad4fa0",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6749261b-7f09-44f3-a783-6083021fdf28"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "df730763-0459-4f55-ac13-bc026067205c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6749261b-7f09-44f3-a783-6083021fdf28"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c35edfe9-c3fe-42f4-bf19-e1c7ca0e4cec",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6749261b-7f09-44f3-a783-6083021fdf28"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "34625e6d-01ca-48b5-8412-6e997f761cf7",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6749261b-7f09-44f3-a783-6083021fdf28"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ab0daf4a-e810-4a69-9608-647478f22e00",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6749261b-7f09-44f3-a783-6083021fdf28"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2ec35d88-f0b4-4943-a7de-79558e0713fb",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6749261b-7f09-44f3-a783-6083021fdf28"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "569eb33c-6904-4dab-9db4-df84d9f2ec42",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6749261b-7f09-44f3-a783-6083021fdf28"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "99328185-a44c-4483-8e5f-fdfc0754f03f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6749261b-7f09-44f3-a783-6083021fdf28"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "1d273aed-f68c-4519-b4eb-ca8b07d419fb",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6749261b-7f09-44f3-a783-6083021fdf28"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "37bbefdb-9299-4bbf-b0f1-a6ee8a2695c7",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6749261b-7f09-44f3-a783-6083021fdf28"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5d84c68b-5c14-421f-a96a-69ceb88e8a0f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6749261b-7f09-44f3-a783-6083021fdf28"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "cbd4b7f1-3b5b-4ed0-afb2-2f90315c3442",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6749261b-7f09-44f3-a783-6083021fdf28"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c2b1a588-2b46-4d96-afad-1ca7562261a5",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6749261b-7f09-44f3-a783-6083021fdf28"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d71b6a56-e51b-4a9d-92ee-7f602dba4df2",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6749261b-7f09-44f3-a783-6083021fdf28"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "769fc1da-e62e-40f6-be75-6712c250c960",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6749261b-7f09-44f3-a783-6083021fdf28"
    }
  ]
}